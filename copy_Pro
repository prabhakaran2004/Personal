open_table----------------

package com.max.Log4j_Opentable;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

import java.util.Set;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
// import utils.EventHandler;

public class OpenTableTest {
    public static WebDriver driver;
    @SuppressWarnings("unused")
    private WebDriverWait wait;
    public final int IMPLICIT_WAIT_TIME = 10;
    public final int PAGE_LOAD_TIME = 5;
    
    // Local Driver
    @BeforeMethod
    public WebDriver beforeMethod() {
        WebDriverManager.chromedriver().setup();
        driver = new ChromeDriver();
        driver.manage().window().maximize();
		driver.get("https://www.opentable.com");
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
		return driver;
        
    }
    // Portal Drivers
    // @BeforeMethod
    // public WebDriver beforeMethod() throws MalformedURLException {
    // ChromeOptions chromeOptions = new ChromeOptions();
    // driver = new RemoteWebDriver(new URL("http://localhost:4444/"),
    // chromeOptions);
    // driver.get("https://www.opentable.com");
    // driver.manage().window().maximize();
    // wait = new WebDriverWait(driver, Duration.ofSeconds(20));
    // WebDriverListener listener = new EventHandler();
    // driver = new EventFiringDecorator<>(listener).decorate(driver);
    // return driver;

    // }
    @Test
    public void opent() throws InterruptedException {
        Thread.sleep(10000);
        int numberOfArrowDownPresses = 3;
        int dropdown = 2;
        int timedropdown = 1;

        WebElement inputbox = driver.findElement(By.xpath("//input[@placeholder='Location, Restaurant, or Cuisine']"));
        inputbox.click();
        inputbox.sendKeys("Bangalore");

        for (int i = 0; i < numberOfArrowDownPresses; i++) {
            inputbox.sendKeys(Keys.ARROW_DOWN);
        }

        WebElement Letsgo = driver
                .findElement(By.xpath("/html/body/div[1]/div/div/main/header/div/span/div/div/div[2]/div[2]/button"));
        Letsgo.click();
        WebElement hotel = driver.findElement(
                By.xpath("/html/body/div[1]/div/div/main/div/div/div[2]/div[1]/div[2]/div[1]/div[1]/a/h6"));
        hotel.click();

        String parentWindowHandle = driver.getWindowHandle();
        Thread.sleep(3000);
        WebElement imageElement = driver
                .findElement(By.xpath("//*[@id='mainContent']/div/div/div[2]/div/div[1]/a/img"));
        imageElement.click();

        System.out.println("CLicked First Hotel");

        Set<String> windowHandles = driver.getWindowHandles();
        for (String windowHandle : windowHandles) {
            if (!windowHandle.equals(parentWindowHandle)) {
                driver.switchTo().window(windowHandle);
                JavascriptExecutor js = (JavascriptExecutor) driver;
                js.executeScript("window.scrollBy(0, 300);");
                break;
            }
        }

        WebElement partySizeDropdown = driver
                .findElement(By.xpath("//select[@id='restProfileSideBarDtpPartySizePicker']"));
        partySizeDropdown.click();

        try {
            for (int i = 0; i < dropdown; i++) {
                partySizeDropdown.sendKeys(Keys.ARROW_DOWN);
            }
            partySizeDropdown.sendKeys(Keys.ENTER);
        } catch (Exception e) {

        }
        System.out.println("CLicked 4 persons");
        try {
            WebElement datePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBarDtpDayPicker-label']"));
            datePicker.click();
            WebElement dateElement = driver.findElement(By.xpath(
                    "//*[@id='restProfileSideBarDtpDayPicker-wrapper']/div/div/div/table/tbody/tr[6]/td[7]/button"));
            dateElement.click();
            System.out.println("CLicked nov 14th date");

        } catch (Exception e) {

        }

        try {
            WebElement timePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBartimePickerDtpPicker']"));
            timePicker.click();

            try {
                for (int i = 0; i < timedropdown; i++) {
                    timePicker.sendKeys(Keys.ARROW_UP);
                }
                timePicker.sendKeys(Keys.ENTER);
            } catch (Exception e) {

            }

            System.out.println("CLicked 6:30pm");

            WebElement findatime = driver
                    .findElement(By.xpath("//*[@id='mainContent']/div/div[2]/div[2]/div/article/div/div[5]/button"));
            findatime.click();
            System.out.println("CLicked Find a Time btn");
        } catch (Exception e) {

        }
        WebElement signinclick = driver
                .findElement(By.xpath("/html/body/div[1]/div/div/header/div[2]/div[2]/div[1]/button"));
        signinclick.click();
    }

    @AfterMethod
    public void afterMethod() {
        driver.quit();
    }

}

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
/////////////////////////////////////////////////////////////////////////////////////

puris_Hotel   log4j

package com.max.Log4j_PuriHoliday;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
// import utils.*;

import io.github.bonigarcia.wdm.WebDriverManager;

public class Test_purihotel {
    public WebDriver driver;
    public final int IMPLICIT_WAIT_TIME = 10;
    public final int PAGE_LOAD_TIME = 5;
    ExtentSparkReporter sparkReporter;
    ExtentReports extent;
    ExtentTest test;

    // Local Drivers
    @BeforeMethod
    public void startUp() {
        WebDriverManager.chromedriver().setup();
        driver = new ChromeDriver();
        driver.manage().window().maximize();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(IMPLICIT_WAIT_TIME));
        driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
        driver.get("https://www.puriholidayresort.com/");
        sparkReporter = new ExtentSparkReporter("./reports/Holiday.html");
        extent = new ExtentReports();
        extent.attachReporter(sparkReporter);
        test = extent.createTest("Holiday");
    }    
    

    // Portal Drivers
    // @BeforeMethod
    // public void startUp() throws MalformedURLException {
    //     DesiredCapabilities dc = new DesiredCapabilities();
    //     dc.setBrowserName("chrome");
    //     driver = new RemoteWebDriver(new URL("http://localhost:4444/"), dc);
    //     driver.manage().window().maximize();
    //     driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(IMPLICIT_WAIT_TIME));
    //     driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
    //     driver.get("https://www.puriholidayresort.com/");
    //     WebDriverListener listener = new EventHandler();
    //     driver = new EventFiringDecorator<>(listener).decorate(driver);
    //     sparkReporter = new ExtentSparkReporter("./reports/Holiday.html");
    //     extent = new ExtentReports();
    //     extent.attachReporter(sparkReporter);
    //     test = extent.createTest("Holiday");
    // }

    @Test(priority = 0)
    public void test1() throws Throwable {
        By getPopUpLocator = By.xpath("//button[@type='button']");
        By getCheckinDateLocator = By.xpath("//input[@id='arr_datepicker']");
        By getCheckinDate = By.xpath("//*[@id=\"ui-datepicker-div\"]/table/tbody/tr[3]/td[4]/a");
        By getBookButtonLocator = By.xpath("//button[@class='custom-btn']");

        Thread.sleep(3000);
        driver.findElement(getPopUpLocator).click();

        driver.findElement(getCheckinDateLocator).click();

        Thread.sleep(3000);
        driver.findElement(getCheckinDate).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"dep_datepicker\"]")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"ui-datepicker-div\"]/table/tbody/tr[3]/td[6]/a")).click();

        Thread.sleep(3000);
        driver.findElement(getBookButtonLocator).click();
    }

    @Test(priority = 1)
    public void test2() throws Throwable {
        By getPopUpLocator = By.xpath("//button[@type='button']");
        By royalHoverLocator = By.xpath("//li[2]/a[contains(text(),'Rooms & Suites')]");
        By royalsuiteKeywordLocator = By.xpath("//a[contains(text(),'Royal Suite')]");
        By amenitiesDropdownLocator = By.xpath("//h3[contains(text(),'AMENITIES')]");

        Thread.sleep(3000);
        driver.findElement(getPopUpLocator).click();

        Thread.sleep(3000);
        Actions actions = new Actions(driver);
        actions.moveToElement(driver.findElement(royalHoverLocator)).build().perform();

        Thread.sleep(3000);
        driver.findElement(royalsuiteKeywordLocator).click();

        Thread.sleep(3000);
        driver.findElement(amenitiesDropdownLocator).click();
    }

    @Test(priority = 2)
    public void test3() throws Throwable {
        By getPopUpLocator = By.xpath("//button[@type='button']");
        By navpuriLocator = By.xpath("//li[1]/a[contains(text(),'About Puri')]");
        By dropChilikLocator = By.xpath("//a[contains(text(),'Chilika Lake')]");
        By continLocator = By.xpath(
                "//textarea[contains(text(),'Title your review - Describe your stay in one sentence or less. ')]");
        By butconLocator = By.xpath("//input[@value='Continue']");
        By familyLocator = By.xpath("//span[contains(text(),'Family')]");

        Thread.sleep(3000);
        driver.findElement(getPopUpLocator).click();

        Thread.sleep(3000);
        Actions actions = new Actions(driver);
        actions.moveToElement(driver.findElement(navpuriLocator)).build().perform();

        Thread.sleep(3000);
        driver.findElement(dropChilikLocator).click();

        Thread.sleep(4000);
        driver.findElement(continLocator).click();
        driver.findElement(continLocator).sendKeys("Excellent");

        Thread.sleep(3000);
        driver.findElement(butconLocator).click();

        String originalWindow = driver.getWindowHandle();

        for (String windowHandle : driver.getWindowHandles()) {
            if (!originalWindow.contentEquals(windowHandle)) {
                driver.switchTo().window(windowHandle);
                break;
            }
        }

        Thread.sleep(3000);
        driver.findElement(familyLocator).click();
    }

    @AfterMethod
    public void afterMethod() {
        driver.quit();
        extent.flush();
    }
}

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
////////////////////////////////////////////////////////////////////

Economic

package com.max.TestNG_IndiaTimes;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import jdk.internal.org.jline.utils.Log;
import java.util.List;
import java.util.Set;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.ExpectedConditions;
// import utils.EventHandler;

public class TestEconomic {
    public static WebDriver driver;
    private WebDriverWait wait;
    public final int IMPLICIT_WAIT_TIME = 10;
    public final int PAGE_LOAD_TIME = 10;

    // Local Driver
    @BeforeMethod
    public void beforeMethod() {
        WebDriverManager.chromedriver().setup();
        driver = new ChromeDriver();
        driver.manage().window().maximize();
        driver.get("https://economictimes.indiatimes.com/et-now/results");
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        System.out.println("Browser");
    }
    // Portal Drivers
    // @BeforeMethod
    // public void beforeMethod() throws MalformedURLException {
    // ChromeOptions chromeOptions = new ChromeOptions();
    // driver = new RemoteWebDriver(new URL("http://localhost:4444"),
    // chromeOptions);
    // driver.manage().window().maximize();
    // wait = new WebDriverWait(driver, Duration.ofSeconds(20));
    // driver.get("https://economictimes.indiatimes.com/et-now/results");
    // wait = new WebDriverWait(driver, Duration.ofSeconds(20));
    // WebDriverListener listener = new EventHandler();
    // driver = new EventFiringDecorator<>(listener).decorate(driver);
    // System.out.println("Browser");
    // }

    @Test
    public void main() throws InterruptedException {
        WebElement ele1 = driver.findElement(By.linkText("Mutual Funds"));
        Thread.sleep(20000);
        // Scroll down
        JavascriptExecutor js = (JavascriptExecutor) driver;
        ele1.click();
        Thread.sleep(5000);
        js.executeScript("window.scrollBy(0,1000)");
        Thread.sleep(5000);
        WebElement amcSelection = driver.findElement(By.xpath("//*[@id=\"amcSelection\"]"));
        amcSelection.click();
        Select select = new Select(amcSelection);
        select.selectByVisibleText(("Canara Robeco"));
        // Thread.sleep(10000);
        WebElement schemeselection = driver.findElement(By.xpath("//*[@id=\"schemenm\"]"));
        schemeselection.click();
        Select select1 = new Select(schemeselection);

        select1.selectByVisibleText("Canara Robeco Bluechip Equity Direct-G");
        WebElement getDetails = driver.findElement(By.id("anchor3"));
        getDetails.click();
        Set<String> Handles = driver.getWindowHandles();
        for (String handle : Handles) {
            if (!handle.equals(driver.getWindowHandle())) {
                driver.switchTo().window(handle);
                break;
            }
        }
        // Thread.sleep(15000);
        WebElement Type = driver.findElement(By.id("installment_type"));
        Type.click();
        // Thread.sleep(10000);
        WebElement SIP = driver.findElement(By.cssSelector("li[data-value='sip']"));
        SIP.click();
        // Thread.sleep(10000);
        WebElement amt = driver.findElement(By.id("installment_amt"));
        amt.click();
        // Thread.sleep(10000);
        WebElement value = driver.findElement(By.cssSelector("li[data-value='1000']"));
        value.click();
        // Thread.sleep(10000);
        WebElement period = driver.findElement(By.id("installment_period"));
        period.click();
        // Thread.sleep(10000);
        WebElement value1 = driver.findElement(By.cssSelector("li[data-value='1095']"));
        value1.click();
        // Thread.sleep(10000);
        WebElement returns = driver.findElement(By.cssSelector("li[data-offset='mfReturnsOffset']"));
        returns.click();
        // Thread.sleep(10000);
        List<WebElement> allRows = driver.findElements(By.tagName("tr"));
        WebElement currentRow = allRows.get(1);
        List<WebElement> cells = currentRow.findElements(By.tagName("td"));
        for (WebElement e : cells) {
            System.out.print(e.getText() + " ");
        }
    }

    @AfterMethod
    public void afterMethod() throws InterruptedException {
        // Thread.sleep(15000);
        driver.quit();
    }
}

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
///////////////////////////////////////////////////////////////

open_Table

package com.max.Webelement_Opentable;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

import java.util.Set;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
// import utils.EventHandler;

public class OpenTableTest {
    public static WebDriver driver;
    @SuppressWarnings("unused")
    private WebDriverWait wait;
    public final int IMPLICIT_WAIT_TIME = 10;
    public final int PAGE_LOAD_TIME = 5;
    
    // Local Drivers
    @BeforeMethod
    public WebDriver beforeMethod() throws MalformedURLException {
        WebDriverManager.chromedriver().setup();
        driver = new ChromeDriver();
        driver.get("https://www.opentable.com");
        driver.manage().window().maximize();
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        return driver;
    }

    // @BeforeMethod
    // public WebDriver beforeMethod() throws MalformedURLException {
    //     ChromeOptions chromeOptions = new ChromeOptions();
    //     driver = new RemoteWebDriver(new URL("http://localhost:4444/"), chromeOptions);
    //     driver.get("https://www.opentable.com");
    //     driver.manage().window().maximize();
    //     wait = new WebDriverWait(driver, Duration.ofSeconds(20));
    //     WebDriverListener listener = new EventHandler();
    //     driver = new EventFiringDecorator<>(listener).decorate(driver);
    //     return driver;

    // }

    @Test
    public void opent() throws InterruptedException {
        Thread.sleep(10000);
        int numberOfArrowDownPresses = 3;
        int dropdown = 2;
        int timedropdown = 1;

        WebElement inputbox = driver.findElement(By.xpath("//input[@placeholder='Location, Restaurant, or Cuisine']"));
        inputbox.click();
        inputbox.sendKeys("Bangalore");

        for (int i = 0; i < numberOfArrowDownPresses; i++) {
            inputbox.sendKeys(Keys.ARROW_DOWN);
        }

        WebElement Letsgo = driver
                .findElement(By.xpath("/html/body/div[1]/div/div/main/header/div/span/div/div/div[2]/div[2]/button"));
        Letsgo.click();
        WebElement hotel = driver.findElement(
                By.xpath("/html/body/div[1]/div/div/main/div/div/div[2]/div[1]/div[2]/div[1]/div[1]/a/h6"));
        hotel.click();

        String parentWindowHandle = driver.getWindowHandle();
        Thread.sleep(3000);
        WebElement imageElement = driver
                .findElement(By.xpath("//*[@id='mainContent']/div/div/div[2]/div/div[1]/a/img"));
        imageElement.click();

        System.out.println("CLicked First Hotel");

        Set<String> windowHandles = driver.getWindowHandles();
        for (String windowHandle : windowHandles) {
            if (!windowHandle.equals(parentWindowHandle)) {
                driver.switchTo().window(windowHandle);
                JavascriptExecutor js = (JavascriptExecutor) driver;
                js.executeScript("window.scrollBy(0, 300);");
                break;
            }
        }

        WebElement partySizeDropdown = driver
                .findElement(By.xpath("//select[@id='restProfileSideBarDtpPartySizePicker']"));
        partySizeDropdown.click();

        try {
            for (int i = 0; i < dropdown; i++) {
                partySizeDropdown.sendKeys(Keys.ARROW_DOWN);
            }
            partySizeDropdown.sendKeys(Keys.ENTER);
        } catch (Exception e) {

        }
        System.out.println("CLicked 4 persons");
        try {
            WebElement datePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBarDtpDayPicker-label']"));
            datePicker.click();
            WebElement dateElement = driver.findElement(By.xpath(
                    "//*[@id='restProfileSideBarDtpDayPicker-wrapper']/div/div/div/table/tbody/tr[6]/td[7]/button"));
            dateElement.click();
            System.out.println("CLicked nov 4 2023");

        } catch (Exception e) {

        }

        // Time picker
        try {
            WebElement timePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBartimePickerDtpPicker']"));
            timePicker.click();

            try {
                for (int i = 0; i < timedropdown; i++) {
                    timePicker.sendKeys(Keys.ARROW_UP);
                }
                timePicker.sendKeys(Keys.ENTER);
            } catch (Exception e) {

            }

            System.out.println("CLicked 6:30pm");

            WebElement findatime = driver
                    .findElement(By.xpath("//*[@id='mainContent']/div/div[2]/div[2]/div/article/div/div[5]/button"));
            findatime.click();
            System.out.println("CLicked Find a Time btn");
        } catch (Exception e) {

        }
        WebElement signinclick = driver
                .findElement(By.xpath("/html/body/div[1]/div/div/header/div[2]/div[2]/div[1]/button"));
        signinclick.click();
    }

    @AfterMethod
    public void afterMethod() {
        driver.quit();
    }

}


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-------------------------------------------------------------------------------------------------------------------------------------------
........................................................................................................................................
============================================================================================================================================


  1. ixigo


package Ixigo_Test;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import utils.EventHandler;

public class Test_ixigo {
	public static WebDriver driver;
	 private static final int PAGE_LOAD_TIME = 30;
	
 @BeforeMethod
    public WebDriver beforeMethod() throws MalformedURLException {
		ChromeOptions chromeOptions = new ChromeOptions();
		driver = new RemoteWebDriver(new URL("http://localhost:4444/"), chromeOptions);
		driver.get("https://www.ixigo.com/");
		driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
		WebDriverListener listener = new EventHandler();
		driver = new EventFiringDecorator<>(listener).decorate(driver);
		return driver;
        
    }
	@AfterMethod
    public void afterMethod() {
        if (driver != null) {
            driver.quit();
        }
    }

    @Test
    public void testIxigo() throws InterruptedException {
        WebElement RoundTrip = driver.findElement(By.cssSelector(
                "body > main > div.max-w-\\[1240px\\].m-auto.mainContainer > div.pt-30.mx-0.relative.px-20.xl\\:px-0 > div.border-none.shadow-500.p-20.flex.flex-col.gap-10.rounded-20.bg-white.undefined > div.flex.justify-between.items-center > div.flex.flex-col > div > button.flex.items-center.relative.transition-all.min-h-\\[40px\\].py-5.border.rounded-full.px-15.text-primary.hover\\:bg-primary-over.border-secondary.hover\\:bg-subbrand-50"));
        RoundTrip.click();

        Thread.sleep(2000);
        WebElement From = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[1]/div[1]/div"));
        From.click();
        Thread.sleep(2000);
        WebElement FromCity = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[1]/div[3]/div[2]/li"));
        FromCity.click();
        Thread.sleep(2000);
        WebElement To = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[2]/div[1]/div"));
        To.click();
        Thread.sleep(2000);
        WebElement ToCity = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[2]/div[3]/div[3]/li"));
        ToCity.click();

        Thread.sleep(2000);
        WebElement Depature = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[1]/div/div"));
        Depature.click();
        Thread.sleep(2000);
        WebElement DepatureDate = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[3]/div/div[1]/div[2]/div[1]/div/div/div[2]/button[3]"));
        DepatureDate.click();
        Thread.sleep(2000);
        WebElement Return = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[2]/div/div[1]"));
        Return.click();
        Thread.sleep(2000);
        WebElement ReturnDate = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[3]/div/div[1]/div[2]/div[1]/div/div/div[2]/button[4]"));
        ReturnDate.click();

        Thread.sleep(2000);
        WebElement TravelersClass = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[1]/div"));
        TravelersClass.click();
        Thread.sleep(2000);
        WebElement TravelerAdult = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[1]/div[1]/div[2]/div/button[2]"));
        TravelerAdult.click();
        Thread.sleep(2000);
        WebElement TravelerChild = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[1]/div[2]/div[2]/div/button[2]"));
        TravelerChild.click();
        Thread.sleep(2000);
        WebElement Class = driver.findElement(
                By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[1]/div[5]/div/div[3]"));
        Class.click();
        Thread.sleep(2000);
        WebElement Done = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[2]/button"));
        Done.click();

        Thread.sleep(2000);
        WebElement Search = driver.findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/button"));
        Search.click();

        Thread.sleep(5000);
        driver.quit();
    }


************************************************************************************************************************************************
2.

package com.example;
import java.net.MalformedURLException;
import java.net.URL;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
/**
* Unit test for simple App.
*/
public class AppTest
{
public static WebDriver driver;
@Test
public void shouldAnswerWithTrue() throws MalformedURLException, InterruptedException
{
ChromeOptions co = new ChromeOptions();
// WebDriverManager.chromedriver().setup();
// WebDriver driver = new ChromeDriver();
driver= new RemoteWebDriver(new URL("http://localhost:4444/"),co);
driver.get("https://www.shoppersstop.com");
Thread.sleep(8000);
driver.findElement(By.className("user-icon")).click();
driver.manage().window().maximize();
// String tit =driver.getTitle();
// String src =driver.getPageSource();
driver.navigate().to("https://www.google.com");
driver.navigate().back();
driver.close();
}
}

*********************************************88

3.opentable

package Opentable_Test;



import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import java.util.Set;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import utils.EventHandler;


public class OpenTableTest {
    public static WebDriver driver;
    @SuppressWarnings("unused")
    private WebDriverWait wait;
    public final int IMPLICIT_WAIT_TIME=10;
    public final int PAGE_LOAD_TIME=5;
    

 @BeforeMethod
    public WebDriver beforeMethod() throws MalformedURLException {
        ChromeOptions chromeOptions = new ChromeOptions();
        driver = new RemoteWebDriver(new URL("http://localhost:4444/"), chromeOptions);
        driver.get("https://www.opentable.com");
        driver.manage().window().maximize();
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        //driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);
        return driver;
        
    }
    @Test
    public void opent() throws InterruptedException {
        Thread.sleep(10000);
        int numberOfArrowDownPresses = 3;
        int dropdown = 2;
        int timedropdown = 1;

        WebElement inputbox = driver.findElement(By.xpath("//input[@placeholder='Location, Restaurant, or Cuisine']"));
        inputbox.click();
        inputbox.sendKeys("Bangalore");

        for (int i = 0; i < numberOfArrowDownPresses; i++) {
            inputbox.sendKeys(Keys.ARROW_DOWN);
        }

        WebElement Letsgo = driver.findElement(By.xpath("/html/body/div[1]/div/div/main/header/div/span/div/div/div[2]/div[2]/button"));
            Letsgo.click();
        WebElement hotel = driver.findElement(By.xpath("/html/body/div[1]/div/div/main/div/div/div[2]/div[1]/div[2]/div[1]/div[1]/a/h6"));
            hotel.click();

        String parentWindowHandle = driver.getWindowHandle();
        Thread.sleep(3000);
        WebElement imageElement = driver
                .findElement(By.xpath("//*[@id='mainContent']/div/div/div[2]/div/div[1]/a/img"));
        imageElement.click();

        System.out.println("CLicked Far & East - Four Seasons Hotel Bengaluru.");
		//System.out.println("CLicked First Hotel");
        Set<String> windowHandles = driver.getWindowHandles();
        for (String windowHandle : windowHandles) {
            if (!windowHandle.equals(parentWindowHandle)) {
                driver.switchTo().window(windowHandle);
                JavascriptExecutor js = (JavascriptExecutor) driver;
                js.executeScript("window.scrollBy(0, 300);");
                break;
            }
        }

        WebElement partySizeDropdown = driver
                .findElement(By.xpath("//select[@id='restProfileSideBarDtpPartySizePicker']"));
        partySizeDropdown.click();

        try {
            for (int i = 0; i < dropdown; i++) {
                partySizeDropdown.sendKeys(Keys.ARROW_DOWN);
            }
            partySizeDropdown.sendKeys(Keys.ENTER);
        } catch (Exception e) {

        }
        System.out.println("CLicked 4 persons");
        try {
            WebElement datePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBarDtpDayPicker-label']"));
            datePicker.click();
            WebElement dateElement = driver.findElement(By.xpath(
                    "//*[@id='restProfileSideBarDtpDayPicker-wrapper']/div/div/div/table/tbody/tr[6]/td[7]/button"));
            dateElement.click();
            System.out.println("CLicked Nov 11, 2023");

        } catch (Exception e) {

        }

        // Time picker
        try {
            WebElement timePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBartimePickerDtpPicker']"));
            timePicker.click();

            try {
                for (int i = 0; i < timedropdown; i++) {
                    timePicker.sendKeys(Keys.ARROW_UP);
                }
                timePicker.sendKeys(Keys.ENTER);
            } catch (Exception e) {

            }

            System.out.println("CLicked 6:30pm");

            WebElement findatime = driver
                    .findElement(By.xpath("//*[@id='mainContent']/div/div[2]/div[2]/div/article/div/div[5]/button"));
            findatime.click();
            System.out.println("CLicked Find a Time btn");
        } catch (Exception e) {

        }
        WebElement signinclick = driver.findElement(By.xpath("/html/body/div[1]/div/div/header/div[2]/div[2]/div[1]/button"));
        signinclick.click();
    }

    @AfterMethod
    public void afterMethod() {
        driver.quit();
    }

}

************************************************************************


4.Economictimes

package economic;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import jdk.internal.org.jline.utils.Log;
import utils.EventHandler;

import java.util.List;
import java.util.Set;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.ExpectedConditions;

@SuppressWarnings("unused")
public class TestEconomic {
    public static WebDriver driver;
    @SuppressWarnings("unused")
    private WebDriverWait wait;
    public final int IMPLICIT_WAIT_TIME = 10;
    public final int PAGE_LOAD_TIME = 10;

    @BeforeMethod
    public void beforeMethod() throws MalformedURLException {
        // ChromeOptions chromeOptions = new ChromeOptions();
        // chromeOptions.addArguments("--headless"); // Run in headless mode
        // driver = new RemoteWebDriver(new URL("http://localhost:4444/wd/hub"), chromeOptions); // Use localhost for Selenium Grid
        // driver.manage().window().maximize();
        // driver.manage().timeouts().implicitlyWait(IMPLICIT_WAIT_TIME, TimeUnit.SECONDS);
        // driver.manage().timeouts().pageLoadTimeout(PAGE_LOAD_TIME, TimeUnit.SECONDS);
        // wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        // driver.get("https://economictimes.indiatimes.com/et-now/results");
        // System.out.println("Browser opened and navigated to the Economic Times website");

        // Portal
        ChromeOptions chromeOptions = new ChromeOptions();
        driver = new RemoteWebDriver(new URL("http://localhost:4444"),
        chromeOptions);
        driver.manage().window().maximize();
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        driver.get("https://economictimes.indiatimes.com/et-now/results");
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);
        System.out.println("Browser");

    }

    @Test
    public void economic() throws InterruptedException {
       driver.findElement(By.xpath("//*[@id=\"topnav\"]/div[10]/a")).click();
        Thread.sleep(10000);
        JavascriptExecutor JS = (JavascriptExecutor) driver;
        JS.executeScript("window.scrollBy(0,1000)", "");
        driver.findElement(By.id("amcSelection")).click();
        Thread.sleep(5000);
        Select S = new Select(driver.findElement(By.id("amcSelection")));
        S.selectByVisibleText("Canara Robeco");
        Thread.sleep(5000);
        driver.findElement(By.id("schemenm")).click();
        Thread.sleep(5000);
        Select Se = new Select(driver.findElement(By.id("schemenm")));
        Se.selectByVisibleText("Canara Robeco Bluechip Equity Direct-G");
        Thread.sleep(5000);
        driver.findElement(By.id("anchor3")).click();
        Thread.sleep(15000);

        String currentTab = driver.getWindowHandle();
        for (String tab : driver.getWindowHandles()) {
            if (!tab.equals(currentTab)) {
                driver.switchTo().window(tab);
                break;
            }
        }

        WebElement dropdownContainer = driver
                .findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[2]/ul/li/span"));
        dropdownContainer.click();

        WebElement Options = dropdownContainer
                .findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[2]/ul/li/ul/li[1]"));
        Options.click();
        Thread.sleep(2000);
        WebElement Container = driver
                .findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[3]/ul/li/span"));
        Container.click();

        WebElement Option = dropdownContainer.findElement(
                By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[3]/ul/li/ul/li[3]/span"));
        Option.click();

        Thread.sleep(2000);

        WebElement Contain = driver
                .findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[4]/ul/li/span"));
        Contain.click();

        WebElement Opt = dropdownContainer.findElement(
                By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[4]/ul/li/ul/li[4]/span"));
        Opt.click();

        WebElement returns = driver.findElement(By.xpath("/html/body/main/div[10]/section[3]/div/ul/li[2]"));
        returns.click();
        Thread.sleep(5000);

        WebElement printthis = driver.findElement(By.xpath(
                "/html/body/main/div[10]/section[5]/div/div[1]/section[1]/div[2]/div[2]/ul/li[1]/table/tbody/tr[1]"));
        System.out.println(printthis.getText());
    }

    @AfterMethod
    public void afterMethod() throws InterruptedException {
        Thread.sleep(15000);
        driver.quit();
    }

}

************************************************************************


5.puriresort

package PuriesHotel_Test;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import utils.*;
// import uistore.*;
public class Test_purihotel {
 public WebDriver driver;
 public final int IMPLICIT_WAIT_TIME = 10;
 public final int PAGE_LOAD_TIME = 5;
 // SpicejetUi sui = new SpicejetUi();
 // WebDriverHelper helper = new WebDriverHelper(driver);
 ExtentSparkReporter sparkReporter;
 ExtentReports extent;
 ExtentTest test;
 @BeforeMethod
 public void startUp() throws MalformedURLException {
 DesiredCapabilities dc = new DesiredCapabilities();
 dc.setBrowserName("chrome");
 driver = new RemoteWebDriver(new URL("http://localhost:4444/"), dc);
 driver.manage().window().maximize();
 driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(IMPLICIT_WAIT_TIME));
 driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
 driver.get("https://www.puriholidayresort.com/");
 WebDriverListener listener = new EventHandler();
 driver = new EventFiringDecorator<>(listener).decorate(driver);
 sparkReporter = new ExtentSparkReporter("./reports/Spicejet.html");
 extent = new ExtentReports();
 extent.attachReporter(sparkReporter);
 test = extent.createTest("Spicejet");
 }
 @Test(priority = 0)
 public void test1() throws Throwable {
 By getPopUpLocator = By.xpath("//button[@type='button']");
 By getCheckinDateLocator = By.xpath("//input[@id='arr_datepicker']");
 By getCheckinDate = By.xpath("//*[@id=\"ui-datepicker-div\"]/table/tbody/tr[3]/td[4]/a");
 By getBookButtonLocator = By.xpath("//button[@class='custom-btn']");
 // Click on the pop-up button
 Thread.sleep(3000);
 driver.findElement(getPopUpLocator).click();
 // Click on the check-in date field
 driver.findElement(getCheckinDateLocator).click();
 // Select the check-in date
 Thread.sleep(3000);
 driver.findElement(getCheckinDate).click();
 Thread.sleep(3000);
 driver.findElement(By.xpath("//*[@id=\"dep_datepicker\"]")).click();
 Thread.sleep(3000);
 driver.findElement(By.xpath("//*[@id=\"ui-datepicker-div\"]/table/tbody/tr[3]/td[6]/a")).click();
 // Click on the book button
 Thread.sleep(3000);
 driver.findElement(getBookButtonLocator).click();
 }
 
@Test(priority = 1)
 public void test2() throws Throwable {
 By getPopUpLocator = By.xpath("//button[@type='button']");
 By royalHoverLocator = By.xpath("//li[2]/a[contains(text(),'Rooms & Suites')]");
 By royalsuiteKeywordLocator = By.xpath("//a[contains(text(),'Royal Suite')]");
 By amenitiesDropdownLocator = By.xpath("//h3[contains(text(),'AMENITIES')]");
 // Click on the pop-up button
 Thread.sleep(3000);
 driver.findElement(getPopUpLocator).click();
 // Hover over the 'Rooms & Suites' link
 Thread.sleep(3000);
 Actions actions = new Actions(driver);
 actions.moveToElement(driver.findElement(royalHoverLocator)).build().perform();
 // Click on the 'Royal Suite' link
 Thread.sleep(3000);
 driver.findElement(royalsuiteKeywordLocator).click();
 // Click on the 'AMENITIES' dropdown
 Thread.sleep(3000);
 driver.findElement(amenitiesDropdownLocator).click();
 }
 @Test(priority = 2)
 public void test3() throws Throwable {
 By getPopUpLocator = By.xpath("//button[@type='button']");
 By navpuriLocator = By.xpath("//li[1]/a[contains(text(),'About Puri')]");
 By dropChilikLocator = By.xpath("//a[contains(text(),'Chilika Lake')]");
 By continLocator = By.xpath("//textarea[contains(text(),'Title your review - Describe your stay in one sentence or less. ')]");
 By butconLocator = By.xpath("//input[@value='Continue']");
 By familyLocator = By.xpath("//span[contains(text(),'Family')]");
// Click on the pop-up button
 Thread.sleep(3000);
 driver.findElement(getPopUpLocator).click();
 
 
 // Hover over 'About Puri' link
 Thread.sleep(3000);
 Actions actions = new Actions(driver);
 actions.moveToElement(driver.findElement(navpuriLocator)).build().perform();
 // Click on 'Chilika Lake' link
 Thread.sleep(3000);
 driver.findElement(dropChilikLocator).click();
 // Interact with the textarea
 Thread.sleep(4000);
 driver.findElement(continLocator).click();
 driver.findElement(continLocator).sendKeys("Excellent");
 // Click the 'Continue' button
 Thread.sleep(3000);
 driver.findElement(butconLocator).click();
 // Handle new tab/window if necessar
 String originalWindow = driver.getWindowHandle();
 
for (String windowHandle : driver.getWindowHandles()) {
 if (!originalWindow.contentEquals(windowHandle)) {
 driver.switchTo().window(windowHandle);
 break;
 }
 }
 // Click on 'Family'
 Thread.sleep(3000);
 driver.findElement(familyLocator).click();
 }
 @AfterMethod
 public void afterMethod() {
 driver.quit();
 extent.flush();
 }
}

************************************************************************

pom.xml

<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>ex</groupId>
  <artifactId>Milestone3</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <name>Milestone3</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <dependencies>
   <!-- https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager -->
<dependency>

    <groupId>io.github.bonigarcia</groupId>
    <artifactId>webdrivermanager</artifactId>
    <version>5.4.1</version>
</dependency>
<dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>7.8.0</version>
      <scope>test</scope>
    </dependency>
 <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.6</version>
    </dependency>

<dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>slf4j-simple</artifactId>
    <version>2.0.7</version>
    <scope>test</scope>
</dependency>



<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
<dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-java</artifactId>
    <version>4.11.0</version>
</dependency>

 <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
        <version>5.0.0</version>
    </dependency>
    <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId>
        <version>5.0.0</version>
    </dependency>
   
    <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>2.14.1</version> <!-- Use the appropriate version -->
    </dependency>
    <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>2.14.1</version> <!-- Use the appropriate version -->
    </dependency>
    <dependency>
      <groupId>com.aventstack</groupId>
      <artifactId>extentreports</artifactId>
      <version>5.0.9</version>
      <exclusions>
        <exclusion>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
   
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>gherkin</artifactId>
      <version>2.12.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-junit</artifactId>
      <version>1.2.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-core</artifactId>
      <version>1.2.5</version>
    </dependency>
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-java</artifactId>
      <version>1.2.5</version>
    </dependency>
<dependency>
    <groupId>log4j</groupId>
    <artifactId>log4j</artifactId>
    <version>1.2.17</version> <!-- Replace with your Log4j version -->
</dependency>

  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>

************************************************************************
8. opentable


package Opentable_Test;



import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import java.util.Set;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import utils.EventHandler;


public class OpenTableTest {
    public static WebDriver driver;
    @SuppressWarnings("unused")
    private WebDriverWait wait;
    public final int IMPLICIT_WAIT_TIME=10;
    public final int PAGE_LOAD_TIME=5;
    

 @BeforeMethod
    public WebDriver beforeMethod() throws MalformedURLException {
        ChromeOptions chromeOptions = new ChromeOptions();
        driver = new RemoteWebDriver(new URL("http://localhost:4444/"), chromeOptions);
        driver.get("https://www.opentable.com");
        driver.manage().window().maximize();
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        //driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);
        return driver;
        
    }
    @Test
    public void opent() throws InterruptedException {
        Thread.sleep(10000);
        int numberOfArrowDownPresses = 3;
        int dropdown = 2;
        int timedropdown = 1;

        WebElement inputbox = driver.findElement(By.xpath("//input[@placeholder='Location, Restaurant, or Cuisine']"));
        inputbox.click();
        inputbox.sendKeys("Bangalore");

        for (int i = 0; i < numberOfArrowDownPresses; i++) {
            inputbox.sendKeys(Keys.ARROW_DOWN);
        }

        WebElement Letsgo = driver.findElement(By.xpath("/html/body/div[1]/div/div/main/header/div/span/div/div/div[2]/div[2]/button"));
            Letsgo.click();
        WebElement hotel = driver.findElement(By.xpath("/html/body/div[1]/div/div/main/div/div/div[2]/div[1]/div[2]/div[1]/div[1]/a/h6"));
            hotel.click();

        String parentWindowHandle = driver.getWindowHandle();
        Thread.sleep(3000);
        WebElement imageElement = driver
                .findElement(By.xpath("//*[@id='mainContent']/div/div/div[2]/div/div[1]/a/img"));
        imageElement.click();

        System.out.println("CLicked Far & East - Four Seasons Hotel Bengaluru.");

        Set<String> windowHandles = driver.getWindowHandles();
        for (String windowHandle : windowHandles) {
            if (!windowHandle.equals(parentWindowHandle)) {
                driver.switchTo().window(windowHandle);
                JavascriptExecutor js = (JavascriptExecutor) driver;
                js.executeScript("window.scrollBy(0, 300);");
                break;
            }
        }

        WebElement partySizeDropdown = driver
                .findElement(By.xpath("//select[@id='restProfileSideBarDtpPartySizePicker']"));
        partySizeDropdown.click();

        try {
            for (int i = 0; i < dropdown; i++) {
                partySizeDropdown.sendKeys(Keys.ARROW_DOWN);
            }
            partySizeDropdown.sendKeys(Keys.ENTER);
        } catch (Exception e) {

        }
        System.out.println("CLicked 4 persons");
        try {
            WebElement datePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBarDtpDayPicker-label']"));
            datePicker.click();
            WebElement dateElement = driver.findElement(By.xpath(
                    "//*[@id='restProfileSideBarDtpDayPicker-wrapper']/div/div/div/table/tbody/tr[6]/td[7]/button"));
            dateElement.click();
            System.out.println("CLicked May 14, 2024");

        } catch (Exception e) {

        }

        // Time picker
        try {
            WebElement timePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBartimePickerDtpPicker']"));
            timePicker.click();

            try {
                for (int i = 0; i < timedropdown; i++) {
                    timePicker.sendKeys(Keys.ARROW_UP);
                }
                timePicker.sendKeys(Keys.ENTER);
            } catch (Exception e) {

            }

            System.out.println("CLicked 6:30pm");

            WebElement findatime = driver
                    .findElement(By.xpath("//*[@id='mainContent']/div/div[2]/div[2]/div/article/div/div[5]/button"));
            findatime.click();
            System.out.println("CLicked Find a time btn");
        } catch (Exception e) {


        }
        WebElement signinclick = driver.findElement(By.xpath("/html/body/div[1]/div/div/header/div[2]/div[2]/div[1]/button"));
        signinclick.click();
		System.out.println("Findd the log extension");

    }

    @AfterMethod
    public void afterMethod() {
        driver.quit();
    }

}

******************************
9.

package MoneyControl_Test;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.support.ui.Select;
import utils.EventHandler;
public class Test_moneycontrol {
public static WebDriver driver;
@SuppressWarnings("unused")
private WebDriverWait wait;
public final int IMPLICIT_WAIT_TIME=10;
public final int PAGE_LOAD_TIME=10;
@BeforeMethod
public void beforeMethod() throws MalformedURLException {
ChromeOptions chromeOptions = new ChromeOptions();
driver = new RemoteWebDriver(new URL("http://localhost:4444"), chromeOptions);
driver.manage().window().maximize();
wait = new WebDriverWait(driver, Duration.ofSeconds(20));
driver.get("https://economictimes.indiatimes.com/et-now/results");
wait = new WebDriverWait(driver, Duration.ofSeconds(20));
WebDriverListener listener = new EventHandler();
driver = new EventFiringDecorator<>(listener).decorate(driver);
System.out.println("Browser");
}
@Test
public void main() throws InterruptedException
{
driver.findElement(By.xpath("//*[@id=\"topnav\"]/div[10]/a")).click();
Thread.sleep(10000);
JavascriptExecutor JS=(JavascriptExecutor)driver;
JS.executeScript("window.scrollBy(0,1000)", "");
driver.findElement(By.id("amcSelection")).click();
Thread.sleep(5000);
Select S=new Select(driver.findElement(By.id("amcSelection")));
S.selectByVisibleText("Canara Robeco");
Thread.sleep(5000);
driver.findElement(By.id("schemenm")).click();
Thread.sleep(5000);
Select Se=new Select(driver.findElement(By.id("schemenm")));
Se.selectByVisibleText("Canara Robeco Bluechip Equity Direct-G");
Thread.sleep(5000);
driver.findElement(By.id("anchor3")).click();
Thread.sleep(15000);
String currentTab = driver.getWindowHandle();
for (String tab : driver.getWindowHandles()) {
if (!tab.equals(currentTab)) {
driver.switchTo().window(tab);
break;
}
}
WebElement dropdownContainer =
driver.findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[2]/ul/li/span"));
dropdownContainer.click();
WebElement Options =
dropdownContainer.findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[2]/ul/li/ul/li[1]"));
Options.click();
Thread.sleep(2000);
WebElement Container =
driver.findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[3]/ul/li/span"));
Container.click();
WebElement Option =
dropdownContainer.findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[3]/ul/li/ul/li[3]/span"));
Option.click();
Thread.sleep(2000);
WebElement Contain=
driver.findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[4]/ul/li/span"));
Contain.click();
WebElement Opt =
dropdownContainer.findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[4]/ul/li/ul/li[4]/span"));
Opt.click();
WebElement returns= driver.findElement(By.xpath("/html/body/main/div[10]/section[3]/div/ul/li[2]"));
returns.click();
Thread.sleep(5000);
WebElement
printthis=driver.findElement(By.xpath("/html/body/main/div[10]/section[5]/div/div[1]/section[1]/div[2]/div[2]/ul/li[1]/table/tbody/tr[1]"));
System.out.println(printthis.getText());
}
@AfterMethod
public void afterMethod() throws InterruptedException {
Thread.sleep(15000);
driver.quit();
}
}

*******************************************************
10.






