1,

package Ixigo_Test;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import utils.EventHandler;

public class Test_ixigo {
	public static WebDriver driver;
	
 @BeforeMethod
    public WebDriver beforeMethod() throws MalformedURLException {
		ChromeOptions chromeOptions = new ChromeOptions();
		driver = new RemoteWebDriver(new URL("http://localhost:4444/"), chromeOptions);
		driver.get("https://www.ixigo.com/");
		driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(20));
		WebDriverListener listener = new EventHandler();
		driver = new EventFiringDecorator<>(listener).decorate(driver);
		return driver;
        
    }
 @Test

    public void test() throws InterruptedException {
        
        WebElement RoundTrip = driver.findElement(By.cssSelector(
                "body > main > div.max-w-\\[1240px\\].m-auto.mainContainer > div.pt-30.mx-0.relative.px-20.xl\\:px-0 > div.border-none.shadow-500.p-20.flex.flex-col.gap-10.rounded-20.bg-white.undefined > div.flex.justify-between.items-center > div.flex.flex-col > div > button.flex.items-center.relative.transition-all.min-h-\\[40px\\].py-5.border.rounded-full.px-15.text-primary.hover\\:bg-primary-over.border-secondary.hover\\:bg-subbrand-50"));
        RoundTrip.click();

        Thread.sleep(2000);
        WebElement From = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[1]/div[1]/div"));
        From.click();
        Thread.sleep(2000);
        WebElement FromCity = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[1]/div[3]/div[2]/li"));
        FromCity.click();
        Thread.sleep(2000);
        WebElement To = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[2]/div[1]/div"));
        To.click();
        Thread.sleep(2000);
        WebElement ToCity = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[2]/div[3]/div[3]/li"));
        ToCity.click();

        Thread.sleep(2000);
        WebElement Depature = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[1]/div/div"));
        Depature.click();
        Thread.sleep(2000);
        WebElement DepatureDate = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[3]/div/div[1]/div[2]/div[1]/div/div/div[2]/button[3]"));
        DepatureDate.click();
        Thread.sleep(2000);
        WebElement Return = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[2]/div/div[1]"));
        Return.click();
        Thread.sleep(2000);
        WebElement ReturnDate = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[3]/div/div[1]/div[2]/div[1]/div/div/div[2]/button[4]"));
        ReturnDate.click();

        Thread.sleep(2000);
        WebElement TravelersClass = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[1]/div"));
        TravelersClass.click();
        Thread.sleep(2000);
        WebElement TravelerAdult = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[1]/div[1]/div[2]/div/button[2]"));
        TravelerAdult.click();
        Thread.sleep(2000);
        WebElement TravelerChild = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[1]/div[2]/div[2]/div/button[2]"));
        TravelerChild.click();
        Thread.sleep(2000);
        WebElement Class = driver.findElement(
                By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[1]/div[5]/div/div[3]"));
        Class.click();
        Thread.sleep(2000);
        WebElement Done = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[2]/button"));
        Done.click();

        Thread.sleep(2000);
        WebElement Search = driver.findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/button"));
        Search.click();

        Thread.sleep(5000);
        driver.quit();
    }
	
	}
	
	
2,

package com.example;

import java.net.MalformedURLException;
import java.net.URL;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

/**
 * Unit test for simple App.
 */
public class AppTest {
    public static WebDriver driver;

    @Test
    public void shouldAnswerWithTrue() throws MalformedURLException, InterruptedException {
        //ChromeOptions co = new ChromeOptions();
        WebDriverManager.chromedriver().setup();
        WebDriver driver = new ChromeDriver();
        //driver = new RemoteWebDriver(new URL("http://localhost:4444/"), co);
        driver.get("https://www.shoppersstop.com");
        Thread.sleep(8000);
        driver.findElement(By.className("user-icon")).click();
        driver.manage().window().maximize();
        // String tit =driver.getTitle();
        // String src =driver.getPageSource();
        driver.navigate().to("https://www.google.com");
        driver.navigate().back();
        driver.close();
    }
}


3,

package Opentable_Test;



import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import java.util.Set;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import utils.EventHandler;


public class OpenTableTest {
    public static WebDriver driver;
    @SuppressWarnings("unused")
    private WebDriverWait wait;
    public final int IMPLICIT_WAIT_TIME=10;
    public final int PAGE_LOAD_TIME=5;
    

 @BeforeMethod
    public WebDriver beforeMethod() throws MalformedURLException {
        ChromeOptions chromeOptions = new ChromeOptions();
        driver = new RemoteWebDriver(new URL("http://localhost:4444/"), chromeOptions);
        driver.get("https://www.opentable.com");
        driver.manage().window().maximize();
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        //driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);
        return driver;
        
    }
    @Test
    public void opent() throws InterruptedException {
        Thread.sleep(10000);
        int numberOfArrowDownPresses = 3;
        int dropdown = 2;
        int timedropdown = 1;

        WebElement inputbox = driver.findElement(By.xpath("//input[@placeholder='Location, Restaurant, or Cuisine']"));
        inputbox.click();
        inputbox.sendKeys("Bangalore");

        for (int i = 0; i < numberOfArrowDownPresses; i++) {
            inputbox.sendKeys(Keys.ARROW_DOWN);
        }

        WebElement Letsgo = driver.findElement(By.xpath("/html/body/div[1]/div/div/main/header/div/span/div/div/div[2]/div[2]/button"));
            Letsgo.click();
        WebElement hotel = driver.findElement(By.xpath("/html/body/div[1]/div/div/main/div/div/div[2]/div[1]/div[2]/div[1]/div[1]/a/h6"));
            hotel.click();

        String parentWindowHandle = driver.getWindowHandle();
        Thread.sleep(3000);
        WebElement imageElement = driver
                .findElement(By.xpath("//*[@id='mainContent']/div/div/div[2]/div/div[1]/a/img"));
        imageElement.click();

        System.out.println("CLicked First Hotel");

        Set<String> windowHandles = driver.getWindowHandles();
        for (String windowHandle : windowHandles) {
            if (!windowHandle.equals(parentWindowHandle)) {
                driver.switchTo().window(windowHandle);
                JavascriptExecutor js = (JavascriptExecutor) driver;
                js.executeScript("window.scrollBy(0, 300);");
                break;
            }
        }

        WebElement partySizeDropdown = driver
                .findElement(By.xpath("//select[@id='restProfileSideBarDtpPartySizePicker']"));
        partySizeDropdown.click();

        try {
            for (int i = 0; i < dropdown; i++) {
                partySizeDropdown.sendKeys(Keys.ARROW_DOWN);
            }
            partySizeDropdown.sendKeys(Keys.ENTER);
        } catch (Exception e) {

        }
        System.out.println("CLicked 4 persons");
        try {
            WebElement datePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBarDtpDayPicker-label']"));
            datePicker.click();
            WebElement dateElement = driver.findElement(By.xpath(
                    "//*[@id='restProfileSideBarDtpDayPicker-wrapper']/div/div/div/table/tbody/tr[6]/td[7]/button"));
            dateElement.click();
            System.out.println("CLicked Nov 11, 2023");

        } catch (Exception e) {

        }

        // Time picker
        try {
            WebElement timePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBartimePickerDtpPicker']"));
            timePicker.click();

            try {
                for (int i = 0; i < timedropdown; i++) {
                    timePicker.sendKeys(Keys.ARROW_UP);
                }
                timePicker.sendKeys(Keys.ENTER);
            } catch (Exception e) {

            }

            System.out.println("CLicked 6:30pm");

            WebElement findatime = driver
                    .findElement(By.xpath("//*[@id='mainContent']/div/div[2]/div[2]/div/article/div/div[5]/button"));
            findatime.click();
            System.out.println("CLicked Find a Time btn");
        } catch (Exception e) {

        }
        WebElement signinclick = driver.findElement(By.xpath("/html/body/div[1]/div/div/header/div[2]/div[2]/div[1]/button"));
        signinclick.click();
    }

    @AfterMethod
    public void afterMethod() {
        driver.quit();
    }

}


5,


package PuriesHotel_Test;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import utils.*;


//Portal Code
public class Test_purihotel {

    public WebDriver driver;
    public final int IMPLICIT_WAIT_TIME = 10;
    public final int PAGE_LOAD_TIME = 5;
    // WebDriverHelper helper = new WebDriverHelper(driver);
    ExtentSparkReporter sparkReporter;
    ExtentReports extent;
    ExtentTest test;

    @BeforeMethod
    public void startUp() throws MalformedURLException {
        DesiredCapabilities dc = new DesiredCapabilities();
        dc.setBrowserName("chrome");
        driver = new RemoteWebDriver(new URL("http://localhost:4444/"), dc);

        driver.manage().window().maximize();

        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(IMPLICIT_WAIT_TIME));
        driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));

        driver.get("https://www.puriholidayresort.com/");

        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);

        sparkReporter = new ExtentSparkReporter("./reports/PuriHoli.html");
        extent = new ExtentReports();
        extent.attachReporter(sparkReporter);
        
        test = extent.createTest("HolyResort");
        driver.manage().window().maximize();


        // WebDriverListener listener = new EventHandler();
        // driver = new EventFiringDecorator<>(listener).decorate(driver);
    }

    @Test(priority = 0)
    public void test1() throws Exception {
        Thread.sleep(3000);
        driver.findElement(By.xpath("//button[@type='button']")).click();

        driver.findElement(By.xpath("//input[@id='arr_datepicker']")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//a[@class='ui-state-default' and contains(text(),'30')]")).click();

        Thread.sleep(3000);
        driver.findElement(By.xpath("//button[@class='custom-btn']")).click();
    }

    @Test(priority = 1)
    public void test2() throws Exception {
        Thread.sleep(3000);
        driver.findElement(By.xpath("//button[@type='button']")).click();

        Thread.sleep(3000);
        Actions actions = new Actions(driver);
        actions.moveToElement(driver.findElement(By.xpath("//li[2]/a[contains(text(),'Rooms & Suites')]"))).build()
                .perform();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//a[contains(text(),'Royal Suite')]")).click();

        Thread.sleep(3000);
        driver.findElement(By.xpath("//h3[contains(text(),'AMENITIES')]")).click();
    }

    @Test(priority = 2)
    public void test3() throws Exception {
        Thread.sleep(3000);
        By continLocator = By.xpath(
                "//textarea[contains(text(),'Title your review - Describe your stay in one sentence or less. ')]");
        Thread.sleep(3000);
        driver.findElement(By.xpath("//button[@type='button']")).click();

        Thread.sleep(3000);
        Actions actions = new Actions(driver);
        actions.moveToElement(driver.findElement(By.xpath("//li[1]/a[contains(text(),'About Puri')]"))).build()
                .perform();

        Thread.sleep(3000);
        driver.findElement(By.xpath("//a[contains(text(),'Chilika Lake')]")).click();

        Thread.sleep(4000);
        driver.findElement(continLocator).click();
        driver.findElement(continLocator).sendKeys("Excellent");

        Thread.sleep(3000);
        driver.findElement(By.xpath("//input[@value='Continue']")).click();

        String originalWindow = driver.getWindowHandle();
        for (String windowHandle : driver.getWindowHandles()) {
            if (!originalWindow.contentEquals(windowHandle)) {
                driver.switchTo().window(windowHandle);
                break;
            }
        }

        Thread.sleep(3000);
        driver.findElement(By.xpath("//span[contains(text(),'Family')]")).click();
    }

    @AfterMethod
    public void afterMethod() {
        driver.quit();
    }

    @AfterTest
    public void setupreport() {
        extent.flush();
    }
}


6,


import java.time.Duration;
import java.util.Set;
import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import io.github.bonigarcia.wdm.WebDriverManager;

public class Opentable1 {
    public static void main(String[] args) {
        final Logger logger = Logger.getLogger(Opentable1.class);
        WebDriverManager.chromedriver().setup();
        WebDriver driver = new ChromeDriver();
        PropertyConfigurator.configure("E:\\Training files\\Iamneo\\seleniumcse\\demo3\\demo3\\src\\main\\resources\\log4j2.properties");
        driver.get("https://www.opentable.com");
        driver.manage().window().maximize();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
        
        WebElement inputbox = driver.findElement(By.xpath("//input[@placeholder='Location, Restaurant, or Cuisine']"));
        inputbox.click();
        inputbox.sendKeys("Bangalore");
        for (int i = 0; i < 3; i++) {
            inputbox.sendKeys(Keys.ARROW_DOWN);
        }
        
        String parentWindowHandle = driver.getWindowHandle();
        
        // TC : 2 clicking Let's Go button
        driver.findElement(By.xpath("//*[@id='mainContent']/header/div/span/div/div/div[2]/div[2]/button")).click();
        driver.findElement(By.xpath("//*[@id='mainContent']/div/div/div[2]/div[1]/div[2]/div[1]/div[1]/a")).click();
        System.out.println("Clicked First Hotel");
        logger.info("Clicked First Hotel");
        
        Set<String> windowHandles = driver.getWindowHandles();
        for (String windowHandle : windowHandles) {
            if (!windowHandle.equals(parentWindowHandle)) {
                driver.switchTo().window(windowHandle);
                JavascriptExecutor js = (JavascriptExecutor) driver;
                js.executeScript("window.scrollBy(0, 500);");
                break;
            }
        }
        
        WebElement partySizeDropdown = driver.findElement(By.xpath("//select[@id='restProfileSideBarDtpPartySizePicker']"));
        partySizeDropdown.click();
        try {
            for (int i = 0; i < 2; i++) {
                partySizeDropdown.sendKeys(Keys.ARROW_DOWN);
            }
            partySizeDropdown.sendKeys(Keys.ENTER);
        } catch (Exception e) {
        }
        System.out.println("Clicked 4 persons");
        logger.info("Clicked 4 persons");
        
        try {
            WebElement timePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBartimePickerDtpPicker']"));
            timePicker.click();
            try {
                for (int i = 0; i < 1; i++) {
                    timePicker.sendKeys(Keys.ARROW_UP);
                }
                timePicker.sendKeys(Keys.ENTER);
            } catch (Exception e) {
            }
            System.out.println("Selected 6:30pm");
            logger.info("Selected 6:30pm");
            
            WebElement findatime = driver.findElement(By.xpath("//*[@id='mainContent']/div/div[2]/div[2]/div/article/div/div[5]/button"));
            findatime.click();
            System.out.println("Clicked Find a Time btn");
        } catch (Exception e) {
        }
        
        String parentWindowHandle2 = driver.getWindowHandle();
        // clicking 6.30 pm time button
        driver.findElement(By.linkText("6:30 PM")).click();
        logger.info("Clicked 6:30pm Time Button");
        Set<String> windowHandles2 = driver.getWindowHandles();
        for (String windowHandle : windowHandles2) {
            if (!windowHandle.equals(parentWindowHandle) && !windowHandle.equals(parentWindowHandle2)) {
                driver.switchTo().window(windowHandle);
                JavascriptExecutor js = (JavascriptExecutor) driver;
                js.executeScript("window.scrollBy(0, 500);");
                break;
            }
        }
        // clicking sign-in button in tab no3
        driver.findElement(By.xpath("//*[@id='mainContent']/div/div/div/section/div[4]/button")).click();
        // 
        driver.findElement(By.xpath("//*[@id=\"mainContent\"]/div/div/div/section/form/div[3]/button")).click();
        System.out.println("Clicked Sign in link");
        logger.info("Clicked Sign in link");
    }
}

Proerty File:
# Root logger 
log4j.rootLogger=INFO, file, stdout 
 
# Direct to a file
log4j.appender.file=org.apache.log4j.RollingFileAppender 
log4j.appender.file.File=D:\\Vijai\\app.log
log4j.appender.file.MaxFileSize=5KB 
log4j.appender.file.MaxBackupIndex=2 
log4j.appender.file.layout=org.apache.log4j.PatternLayout 
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n 
 
# Direct to console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender 
log4j.appender.stdout.Target=System.out 
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout 
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n


7,

package com.example;

import java.io.File;
import java.io.FileInputStream;
import org.apache.commons.io.FileUtils;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.junit.BeforeClass;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.io.FileHandler;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.Test;
import com.relevantcodes.extentreports.ExtentReports;
import com.relevantcodes.extentreports.ExtentTest;
import io.github.bonigarcia.wdm.WebDriverManager;

public class AppTest {
    WebDriver w;

    @Test(priority = 1)
    public void navigate() throws Exception {
        WebDriverManager.chromedriver().setup();
        ChromeOptions options = new ChromeOptions();
        options.addArguments("--start-maximized"); // Maximize window
        w = new ChromeDriver(options);
        WebDriverWait wait = new WebDriverWait(w, java.time.Duration.ofSeconds(10)); // Explicit wait
        w.navigate().to("https://www.abhibus.com/");
        Thread.sleep(10000);
        w.findElement(By.id("train-link")).click();
        Thread.sleep(10000);
        String url = w.getCurrentUrl();
        if (url.contains("trains")) {
            WebElement homeLink = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id=\"root\"]/div[1]/div/div[1]/a/img")));
            homeLink.click();
            WebElement loginSignup = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("login-link")));
            loginSignup.click();
            WebElement loginPopup = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id=\"login-heading\"]/div[1]/h4")));
            String popupText = loginPopup.getText();
            if (popupText.contains("Login to AbhiBus")) {
                File screenshotFile = ((ChromeDriver) w).getScreenshotAs(org.openqa.selenium.OutputType.FILE);
                FileHandler.copy(screenshotFile, new File("login_popup_screenshot.png"));
                System.out.println("Screenshot captured successfully.");
            } else {
                System.out.println("Login popup verification failed.");
            }
        } else {
            System.out.println("URL does not contain the keyword 'trains'.");
        }
        w.quit();
    }

    @Test(priority = 2)
    public void Search() throws Exception {
        w = new ChromeDriver();
        WebDriverManager.chromedriver().setup();
        File f = new File("C:\\Users\\PRIYA\\Documents\\CC@TEST.xls");
        FileInputStream i = new FileInputStream(f);
        Workbook wb = new HSSFWorkbook(i);
        WebDriverWait wait = new WebDriverWait(w, java.time.Duration.ofSeconds(10)); // Explicit wait
        Sheet s = wb.getSheet("Sheet1");
        Row r = s.getRow(0);
        w.navigate().to("https://www.abhibus.com/");
        Thread.sleep(2000);
        w.findElement(By.id("bus-link")).click();
        Thread.sleep(5000);
        WebElement toInput = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id=\"search-from\"]/div/div/div/div/div[2]/input")));
        toInput.sendKeys(r.getCell(0).getStringCellValue());
        toInput.sendKeys(Keys.ENTER);
        WebElement toIn = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id=\"search-to\"]/div/div/div/div/div[2]/input")));
        toIn.sendKeys(r.getCell(1).getStringCellValue());
        toIn.sendKeys(Keys.ENTER);
        w.findElement(By.xpath("//*[@id=\"search-button\"]/button")).click();
        Thread.sleep(9000);
        if (w.getCurrentUrl().contains("Mumbai")) {
            System.out.println("Verified");
        } else {
            System.out.println("Not verified");
        }
    }

    @Test(priority = 3)
    public void scroll() throws Exception {
        WebDriverManager.chromedriver().setup();
        w = new ChromeDriver();
        w.navigate().to("https://www.abhibus.com/");
        w.manage().window().maximize();
        Thread.sleep(5000);
        JavascriptExecutor j = (JavascriptExecutor) w;
        j.executeScript("window.scrollBy(0,1000)", "");
        w.findElement(By.xpath("//*[@id=\"footer-routes\"]/div/div[1]/div/div/div/div/button[5]")).click();
        Thread.sleep(2000);
        w.findElement(By.xpath("//*[@id=\"footer-routes\"]/div/div[2]/div/div/div/div[7]/a")).click();
        Thread.sleep(2000);
        TakesScreenshot ts = (TakesScreenshot) w;
        File src = ts.getScreenshotAs(OutputType.FILE);
        File des = new File("L:\\SoftwareTesting\\keyworddriven\\src\\test\\ss.png");
        FileUtils.copyFile(src, des);
        String med = w.findElement(By.xpath("/html/body/div[4]/div[1]/div[1]/h2")).getText();
        if (med.equals("Media")) {
            System.out.println("The page contains the word Media");
        } else
            System.out.println("The page doesnot contain the word Media");
    }
}

excel :

|------------------|------------------|
|      From        |        To        |
|------------------|------------------|
|    Source_1      |    Destination_1 |
|    Source_2      |    Destination_2 |
|    Source_3      |    Destination_3 |
|       ...        |        ...       |
|------------------|------------------|



8,


import java.time.Duration;
import java.util.Set;
import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import io.github.bonigarcia.wdm.WebDriverManager;

public class Opentable1 {
    public static void main(String[] args) {
        final Logger logger = Logger.getLogger(Opentable1.class);
        WebDriverManager.chromedriver().setup();
        WebDriver driver = new ChromeDriver();
        PropertyConfigurator.configure("E:\\Training files\\Iamneo\\seleniumcse\\demo3\\demo3\\src\\main\\resources\\log4j2.properties");
        driver.get("https://www.opentable.com");
        driver.manage().window().maximize();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
        
        WebElement inputbox = driver.findElement(By.xpath("//input[@placeholder='Location, Restaurant, or Cuisine']"));
        inputbox.click();
        inputbox.sendKeys("Bangalore");
        for (int i = 0; i < 3; i++) {
            inputbox.sendKeys(Keys.ARROW_DOWN);
        }
        
        String parentWindowHandle = driver.getWindowHandle();
        
        // TC : 2 clicking Let's Go button
        driver.findElement(By.xpath("//*[@id='mainContent']/header/div/span/div/div/div[2]/div[2]/button")).click();
        driver.findElement(By.xpath("//*[@id='mainContent']/div/div/div[2]/div[1]/div[2]/div[1]/div[1]/a")).click();
        System.out.println("Clicked First Hotel");
        logger.info("Clicked First Hotel");
        
        Set<String> windowHandles = driver.getWindowHandles();
        for (String windowHandle : windowHandles) {
            if (!windowHandle.equals(parentWindowHandle)) {
                driver.switchTo().window(windowHandle);
                JavascriptExecutor js = (JavascriptExecutor) driver;
                js.executeScript("window.scrollBy(0, 500);");
                break;
            }
        }
        
        WebElement partySizeDropdown = driver.findElement(By.xpath("//select[@id='restProfileSideBarDtpPartySizePicker']"));
        partySizeDropdown.click();
        try {
            for (int i = 0; i < 2; i++) {
                partySizeDropdown.sendKeys(Keys.ARROW_DOWN);
            }
            partySizeDropdown.sendKeys(Keys.ENTER);
        } catch (Exception e) {
        }
        System.out.println("Clicked 4 persons");
        logger.info("Clicked 4 persons");
        
        try {
            WebElement timePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBartimePickerDtpPicker']"));
            timePicker.click();
            try {
                for (int i = 0; i < 1; i++) {
                    timePicker.sendKeys(Keys.ARROW_UP);
                }
                timePicker.sendKeys(Keys.ENTER);
            } catch (Exception e) {
            }
            System.out.println("Selected 6:30pm");
            logger.info("Selected 6:30pm");
            
            WebElement findatime = driver.findElement(By.xpath("//*[@id='mainContent']/div/div[2]/div[2]/div/article/div/div[5]/button"));
            findatime.click();
            System.out.println("Clicked Find a Time btn");
        } catch (Exception e) {
        }
        
        String parentWindowHandle2 = driver.getWindowHandle();
        // clicking 6.30 pm time button
        driver.findElement(By.linkText("6:30 PM")).click();
        logger.info("Clicked 6:30pm Time Button");
        Set<String> windowHandles2 = driver.getWindowHandles();
        for (String windowHandle : windowHandles2) {
            if (!windowHandle.equals(parentWindowHandle) && !windowHandle.equals(parentWindowHandle2)) {
                driver.switchTo().window(windowHandle);
                JavascriptExecutor js = (JavascriptExecutor) driver;
                js.executeScript("window.scrollBy(0, 500);");
                break;
            }
        }
        // clicking sign-in button in tab no3
        driver.findElement(By.xpath("//*[@id='mainContent']/div/div/div/section/div[4]/button")).click();
        // 
        driver.findElement(By.xpath("//*[@id=\"mainContent\"]/div/div/div/section/form/div[3]/button")).click();
        System.out.println("Clicked Sign in link");
        logger.info("Clicked Sign in link");
    }
}

Proerty File:
# Root logger 
log4j.rootLogger=INFO, file, stdout 
 
# Direct to a file
log4j.appender.file=org.apache.log4j.RollingFileAppender 
log4j.appender.file.File=D:\\Vijai\\app.log
log4j.appender.file.MaxFileSize=5KB 
log4j.appender.file.MaxBackupIndex=2 
log4j.appender.file.layout=org.apache.log4j.PatternLayout 
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n 
 
# Direct to console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender 
log4j.appender.stdout.Target=System.out 
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout 
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n


9,

package com.example;

import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import org.apache.commons.io.FileUtils;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import com.relevantcodes.extentreports.ExtentReports;
import com.relevantcodes.extentreports.ExtentTest;
import com.relevantcodes.extentreports.LogStatus;
import io.github.bonigarcia.wdm.WebDriverManager;

public class AppTest {
    static ExtentTest test;
    static ExtentReports report;

    @BeforeClass
    public static void startTest() {
        report = new ExtentReports("ExtentReportResults.html");
        test = report.startTest("ExtentDemo");
    }

    @Test
    public void TestCase() throws Exception {
        WebDriverManager.chromedriver().setup();
        WebDriver driver = new ChromeDriver();
        driver.manage().window().maximize();
        driver.get("https://www.mayoclinic.org/");
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"header content-inner-container\"]/div[1]/ul/li[5]/div[1]/div/button/span")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"button-d87139392b\"]/span/span/span[1]/span")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"amounts\"]/label[3]")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"designation\"]")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"designation\"]/option[8]")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"adfWrapper\"]/fieldset[2]/div[1]/label"));
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalTitle\"]")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalTitle\"]/option[2]")).click();
        Thread.sleep(3000);
        File fobj = new File("c:\\Users\\91989\\Documents\\ex_9.xls");
        FileInputStream fi = new FileInputStream(fobj);
        Workbook wb = new HSSFWorkbook(fi);
        Sheet sheet = wb.getSheet("Sheet1");
        int rowcount = sheet.getLastRowNum() - sheet.getFirstRowNum() + 1;
        ArrayList<String> arr = new ArrayList<>();
        for (int row = 0; row < rowcount; row++) {
            Row r = sheet.getRow(row);
            for (int col = 0; col < 5; col++) {
                System.out.println(r.getCell(col).getStringCellValue() + "");
                arr.add(r.getCell(col).getStringCellValue() + "");
            }
        }
        driver.findElement(By.xpath("//*[@id=\"personalFirstName\"]")).sendKeys(arr.get(0));
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalLastName\"]")).sendKeys(arr.get(1));
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalCountry\"]")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalCountry\"]/option[80]")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalState\"]")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalState\"]/option[2]")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalAddress\"]")).sendKeys(arr.get(2));
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalCity\"]")).sendKeys(arr.get(3));
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalZip\"]")).sendKeys("635126");
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalPhone\"]")).sendKeys("1234567890");
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalEmail\"]")).sendKeys(arr.get(4));
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"adfSubmit\"]")).click();
        Thread.sleep(10000);
        test.log(LogStatus.PASS, "TestCase passed");
        Thread.sleep(3000);
        File screenshotFile = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
        FileUtils.copyFile(screenshotFile, new File("screenshot.png"));
    }

    @AfterClass
    public static void endTest() {
        report.endTest(test);
        report.flush();
    }
}

10,


package com.pie;

import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.List;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.Test;
import io.github.bonigarcia.wdm.WebDriverManager;

public class AppTest {
    List<String[]> testData;
    WebDriver driver;
    File obj = new File("C:\\Users\\agnkk\\Downloads\\firstcry.xls");
    FileInputStream fis;
    Workbook wb;
    Sheet sh;

    public void checkreport() throws Exception {
        testData = new ArrayList<>();
        WebDriverManager.chromedriver().setup();
        driver = new ChromeDriver();
        driver.get("https://www.firstcry.com/");
        Thread.sleep(12000);
        fis = new FileInputStream(obj);
        wb = new HSSFWorkbook(fis);
        sh = wb.getSheet("Sheet1");
    }

    @Test(priority = 1)
    public void Search() throws Exception {
        checkreport();
        Row r = sh.getRow(0);
        WebElement a = driver.findElement(By.xpath("//*[@id=\"search_box\"]"));
        a.click();
        Thread.sleep(2000);
        a.sendKeys(r.getCell(0) + "");
        Thread.sleep(3000);
        a.sendKeys(Keys.ENTER);
        Thread.sleep(3000);
        String cur = driver.getCurrentUrl();
        if (cur.contains("kids-toys"))
            System.out.println("Validation successful");
        else
            System.out.println("Validation unsuccessful");
        driver.close();
        wb.close();
        fis.close();
    }

    @Test(priority = 2)
    public void clothes() throws Exception {
        checkreport();
        Row r1 = sh.getRow(1);
        WebElement a = driver.findElement(By.xpath("//*[@id=\"search_box\"]"));
        a.click();
        Thread.sleep(2000);
        a.sendKeys(r1.getCell(0) + "");
        Thread.sleep(3000);
        a.sendKeys(Keys.ENTER);
        Thread.sleep(3000);
        driver.findElement(By.xpath("/html/body/div[5]/div[2]/div/div[1]/div[3]/div[2]/div[1]/div[2]/div[2]/ul/li[4]/a/div/span[1]")).click();
        Thread.sleep(3000);
        WebElement lab = driver.findElement(By.xpath("/html/body/div[5]/div[2]/div/div[2]/div[1]/div[1]/h1"));
        if (lab.isDisplayed()) {
            System.out.println(" label element is present");
        } else
            System.out.println(" label element is not found");
        wb.close();
        fis.close();
        driver.close();
    }

    @Test(priority = 3)
    public void balloons() throws Exception {
        checkreport();
        Row r2 = sh.getRow(2);
        WebElement a = driver.findElement(By.xpath("//*[@id=\"search_box\"]"));
        a.click();
        Thread.sleep(2000);
        a.sendKeys(r2.getCell(0) + "");
        Thread.sleep(3000);
        a.sendKeys(Keys.ENTER);
        Thread.sleep(3000);
        String tit = driver.getTitle();
        System.out.println(tit);
        wb.close();
        fis.close();
        driver.close();
    }
}

excel:

|------------------|
|     Search       |
|------------------|
|    Keyword_1     |
|    Keyword_2     |
|    Keyword_3     |
|      ...         |
|------------------|


Replace "Keyword_X" with actual keywords you want to use for testing. Each row represents a test case where the automation script will search for the keyword specified in that row.



11,

package com.max;

import java.io.File;
import java.io.FileInputStream;
import java.time.Duration;
import org.apache.commons.io.FileUtils;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.apache.poi.xssf.usermodel.*;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.Test;
import io.github.bonigarcia.wdm.WebDriverManager;

public class AppTest {
    public static Logger logger = LogManager.getLogger(AppTest.class);

    @Test
    public void runTest() throws Exception {
        //localcode
        FileInputStream fs = new FileInputStream("D:\\groww.xlsx");
        XSSFWorkbook workbook = new XSSFWorkbook(fs);
        XSSFSheet sheet = workbook.getSheet("url");

        XSSFRow row = sheet.getRow(1); 
        String url = row.getCell(0).getStringCellValue(); 

        // String url = "https://www.groww.in";
        WebDriverManager.chromedriver().setup();
        WebDriver driver = new ChromeDriver();
        driver.get(url);
        WebDriverWait wait = new WebDriverWait(driver,
                Duration.ofSeconds(30));
        WebElement calc = wait.until(ExpectedConditions
                .elementToBeClickable(By.xpath("//*[@id=\"footer\"]/div/div[1]/div/div[1]/div[2]/div[3]/a[2]")));
        calc.click();
        WebElement top = wait
                .until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id=\"root\"]/div[2]/h1")));
        String title = top.getText();
        if (title.equals("Calculators")) {
            logger.info("The calculator is present in the top");
            System.out.println("The calc is there");
        }
        File screenshotFile = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
        FileUtils.copyFile(screenshotFile, new File("screenshot.png"));
        WebElement homeLoan = wait.until(
                ExpectedConditions.elementToBeClickable(By.xpath("//*[@id=\"root\"]/div[2]/div[2]/a[15]/div/p[1]")));
        homeLoan.click();
        WebElement loanAmt = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//*[@id=\"LOAN_AMOUNT\"]")));
        loanAmt.sendKeys("2300000");
        logger.info("Amount updated");

        driver.findElement(By.xpath("//*[@id=\"RATE_OF_INTEREST\"]")).sendKeys("8");
        driver.findElement(By.xpath("//*[@id=\"LOAN_TENURE\"]")).sendKeys("25");
        String amtDetails = driver
                .findElement(By.xpath("//*[@id=\"root\"]/div[2]/div[1]/div[2]/div[1]/div[1]/div[2]/div/p")).getText();
        if (amtDetails.equals("Your Amortization Details (Yearly/Monthly)")) {
            logger.info("The given string is found");
            System.out.println("The string is found");
        }
        driver.close();
    }
}
EXCEL :
URL
https://www.groww.in


OR :
package com.sample;


import java.io.FileInputStream;
import java.io.IOException;
import java.time.Duration;

import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import com.aventstack.extentreports.reporter.configuration.Theme;

import io.github.bonigarcia.wdm.WebDriverManager;

public class AppTest {
    WebDriver driver;
    ExtentReports extent;

    @BeforeTest
    public void TestInit() {
        extent = new ExtentReports();
        ExtentSparkReporter reporter = new ExtentSparkReporter(
            "C:\\PC\\Desktop\\Software Testing\\Report\\report\\report");
        extent.attachReporter(reporter);
        reporter.config().setTheme(Theme.STANDARD);
        reporter.config().setDocumentTitle("Test Report");
    }

    /**
     * @throws IOException
     * @throws InterruptedException
     */
    @BeforeMethod
    public void testSetup() throws IOException, InterruptedException {
        FileInputStream fs = new FileInputStream("C:\\PC\\Desktop\\demo1.xlsx");
        XSSFWorkbook workbook = new XSSFWorkbook(fs);
        XSSFSheet sheet = workbook.getSheet("Sheet1");

        XSSFRow row = sheet.getRow(1);
        String name = row.getCell(0).getCellType() == CellType.NUMERIC ? String.valueOf(row.getCell(0).getNumericCellValue()) : row.getCell(0).getStringCellValue();
        String email = row.getCell(1).getCellType() == CellType.NUMERIC ? String.valueOf(row.getCell(1).getNumericCellValue()) : row.getCell(1).getStringCellValue();
        String dob = row.getCell(2).getCellType() == CellType.NUMERIC ? String.valueOf(row.getCell(2).getNumericCellValue()) : row.getCell(2).getStringCellValue();
        String rollno = row.getCell(3).getCellType() == CellType.NUMERIC ? String.valueOf(row.getCell(3).getNumericCellValue()) : row.getCell(3).getStringCellValue();
        String username = row.getCell(4).getCellType() == CellType.NUMERIC ? String.valueOf(row.getCell(4).getNumericCellValue()) : row.getCell(4).getStringCellValue();
        String password = row.getCell(5).getCellType() == CellType.NUMERIC ? String.valueOf(row.getCell(5).getNumericCellValue()) : row.getCell(5).getStringCellValue();
    
        WebDriverManager.chromedriver().setup();
        driver = new ChromeDriver();
        driver.get("https://max-neo-selenium.netlify.app/userform");
        driver.manage().window().maximize();
        Thread.sleep(3000);

        driver.findElement(By.xpath("/html/body/div[1]/div[2]/button[4]/span")).click();
        driver.findElement(By.xpath("/html/body/div[1]/div[1]/div/div/div/div/div/form/span[1]/div[1]/input[1]")).sendKeys(name);
        driver.findElement(By.xpath("/html/body/div[1]/div[1]/div/div/div/div/div/form/span[1]/div[1]/input[2]")).sendKeys(email);
        driver.findElement(By.xpath("/html/body/div[1]/div[1]/div/div/div/div/div/form/span[1]/div[1]/input[3]")).sendKeys(dob);         
        driver.findElement(By.xpath("/html/body/div[1]/div[1]/div/div/div/div/div/form/span[1]/div[1]/input[4]")).sendKeys(rollno);
        driver.findElement(By.xpath("//*[@id='root']/div[1]/div/div/div/div/div/form/span[1]/div[2]/select[1]")).click();
        driver.findElement(By.xpath("//*[@id='root']/div[1]/div/div/div/div/div/form/span[1]/div[2]/select[1]/option[2]")).click();
        driver.findElement(By.xpath("//*[@id=\"root\"]/div[1]/div/div/div/div/div/form/span[1]/div[2]/select[2]")).click();
        driver.findElement(By.xpath("//*[@id=\"root\"]/div[1]/div/div/div/div/div/form/span[1]/div[2]/select[2]/option[11]")).click();
        driver.findElement(By.xpath("/html/body/div[1]/div[1]/div/div/div/div/div/form/span[1]/div[2]/input[1]")).sendKeys(username);
        driver.findElement(By.xpath("/html/body/div[1]/div[1]/div/div/div/div/div/form/span[1]/div[2]/input[2]")).sendKeys(password);
        driver.findElement(By.xpath("/html/body/div[1]/div[1]/div/div/div/div/div/form/span[1]/div[3]/div[2]/input")).click();
        driver.findElement(By.xpath("/html/body/div[1]/div[1]/div/div/div/div/div/form/span[2]/button")).click();
        Thread.sleep(3000);
    }
    @Test
    public void Test1() throws IOException {
        ExtentTest test1 = extent.createTest("Test 1");
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(3));
        if (driver.getPageSource().contains("name")) {
            test1.log(Status.PASS, "Test 1 : Pass");
        } else {
            test1.log(Status.FAIL, "Test 1 : Fail");
        }
    }
    @Test
    public void Test2() {
        ExtentTest test1 = extent.createTest("Test 2");
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(3));
        if (driver.getCurrentUrl().contains("Harris")) {
            test1.log(Status.PASS, "Test 2 : Pass");
        } else {
            test1.log(Status.FAIL, "Test 1 : Fail");
        }
    }
    @AfterMethod
    public void testClose() {
        driver.close();
    }

    @AfterTest
    public void destTest() {
        extent.flush();
    }
}


or


package runner;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import java.util.ArrayList;
import java.util.List;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;
import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import com.aventstack.extentreports.reporter.configuration.Theme;
import io.github.bonigarcia.wdm.WebDriverManager;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import utils.EventHandler;

public class AppTest {
    private static final long PAGE_LOAD_TIME = 10;
    public static WebDriver driver;
    ExtentReports extent;
    XSSFWorkbook workbook;
    
    @BeforeTest
    public void TestInit() {
        extent = new ExtentReports();
        ExtentSparkReporter reporter = new ExtentSparkReporter("/home/coder/project/workspace/Test Report.html");
            extent.attachReporter(reporter);
            reporter.config().setTheme(Theme.STANDARD);
            reporter.config().setDocumentTitle("Test Report");
        }
    @BeforeMethod
    public WebDriver beforeMethod() throws Exception {
        // Portal
        ChromeOptions chromeOptions = new ChromeOptions();
        driver = new RemoteWebDriver(new URL("http://localhost:4444/"),
        chromeOptions);
        driver.manage().window().maximize();
        driver.get("https://www.1mg.com/");
        driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);
        return driver;
        // Local test
        // WebDriverManager.chromedriver().setup();
        // driver = new ChromeDriver();
        // driver.get("https://www.1mg.com/");
        // driver.manage().window().maximize();
        // driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
        // return driver;
    }

    @Test
    public void test1() throws InterruptedException, IOException , Exception{
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(PAGE_LOAD_TIME));
        ExtentTest test1 = extent.createTest("Test 1");
        driver.navigate().refresh();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(PAGE_LOAD_TIME));
        driver.navigate().refresh();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(PAGE_LOAD_TIME));
        driver.findElement(By.xpath("//*[@id='header']/div[4]/div[1]/ul/li[3]/a")).click();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(PAGE_LOAD_TIME));
        ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());
        driver.switchTo().window(tabs.get(1));
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(PAGE_LOAD_TIME));
        driver.findElement(By.xpath("//*[@id='container']/div/div[2]/div/div/div/div[2]/div[2]/div/div/div/div[2]/div/button")).click();
        driver.findElement(By.xpath("//*[@id='container']/div/div[2]/div/div/div[1]/div/div/div/div/div/div/div/div[2]/div[2]/div/div/div[2]/div[1]/a")).click();
        
        String text=driver.findElement(By.xpath("//*[@id='container']/div/div[2]/div/div/div[1]/div/div/div/div/div/div/div/div[2]/div[2]/div/div/div[1]/div[2]/div/div[2]/span")).getText();
        if (text.equals("Please enter a valid 10 digit Mobile Number or Email ID")) {
            test1.log(Status.PASS, "Test 1 : Pass");
            File screenshot = ((ChromeDriver) driver).getScreenshotAs(org.openqa.selenium.OutputType.FILE);
            org.apache.commons.io.FileUtils.copyFile(screenshot, new File("test1.png"));
        } else {
            test1.log(Status.FAIL, "Test 1 : Fail");
        }
    }
    
    @Test
    public void test2() throws InterruptedException, IOException , Exception{
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(PAGE_LOAD_TIME));
        ExtentTest test2 = extent.createTest("Test 2");
        driver.navigate().refresh();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(PAGE_LOAD_TIME));
        driver.navigate().refresh();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(PAGE_LOAD_TIME));
        WebElement hover=driver.findElement(By.xpath("//*[@id='Diabetes__5']"));
        Actions action = new Actions(driver);
        action.moveToElement(hover).perform();
        // Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id='header']/div[6]/ul/li[6]/div[2]/ul/li[3]/a")).click();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(PAGE_LOAD_TIME));
        // Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id='category-container']/div[2]/div[1]/div/div[2]/div[2]/div[1]/div[3]/div[1]/div/div/label[1]/span[2]")).click();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(PAGE_LOAD_TIME));
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id='category-container']/div[2]/div[2]/div[2]/div/div[2]/div[1]/div[1]/div/a/div[3]/div[1]")).click();
        ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());
        driver.switchTo().window(tabs.get(1));
        Thread.sleep(3000);
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(PAGE_LOAD_TIME));
        driver.findElement(By.xpath("//*[@id='container']/div/div/div[2]/div[4]/div[1]/div/div[2]/div[1]/div[2]/div[1]/span")).click();
        String text = driver.findElement(By.xpath("//*[@id='container']/div/div/div[2]/div[3]/div[1]/div[1]/h1")).getText();
        
        if (text.contains("Bjain")) {
            test2.log(Status.PASS, "Test 2 : Pass");
            File screenshot = ((ChromeDriver) driver).getScreenshotAs(org.openqa.selenium.OutputType.FILE);
            org.apache.commons.io.FileUtils.copyFile(screenshot, new File("test2.png"));
        } else {
            test2.log(Status.FAIL, "Test 2 : Fail");
        }
    }
    @Test
    public void test3() throws InterruptedException, IOException , Exception{
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(PAGE_LOAD_TIME));
        ExtentTest test3 = extent.createTest("Test 3");
        FileInputStream fs = new FileInputStream("/home/coder/project/workspace/ms2.xlsx");
        workbook = new XSSFWorkbook(fs);
        XSSFSheet sheet = workbook.getSheet("Sheet1");
        XSSFRow row = sheet.getRow(0);
        String name = row.getCell(0).getStringCellValue();
        driver.navigate().refresh();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(PAGE_LOAD_TIME));
        driver.navigate().refresh();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(PAGE_LOAD_TIME));
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(3));
        driver.findElement(By.xpath("//*[@id='srchBarShwInfo']")).sendKeys(name);
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(3));
        driver.findElement(By.xpath("//*[@id='srchBarShwInfo-form']/span/div")).click();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(3));
        driver.findElement(By.xpath("//*[@id='category-container']/div/div[3]/div[2]/div[1]/div/div[1]/div[2]/div/div/div[2]/div/div[2]/div/div/div/a/div/div[1]")).click();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(3));
        driver.findElement(By.xpath("//*[@id='container']/div/div/div[2]/div[2]/div/div/div[1]/div[1]/span[1]/a")).click();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(3));
        driver.findElement(By.xpath("//*[@id='category-container']/div/div[3]/div[2]/div/div/div/div/div/span/div/div")).click();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(3));
        driver.findElement(By.xpath("//*[@id='header']/div[4]/div[2]/div/div[3]/div/div")).click();
        String text=driver.getCurrentUrl();
        Thread.sleep(1000);
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(3));
        if (text.contains("cart")) {
            test3.log(Status.PASS, "Test 3 : Pass");
            File screenshot = ((ChromeDriver) driver).getScreenshotAs(org.openqa.selenium.OutputType.FILE);
            org.apache.commons.io.FileUtils.copyFile(screenshot, new File("test3.png"));
        } else {
            test3.log(Status.FAIL, "Test 3 : Fail");
        }
    }
    @AfterMethod
    public void testClose() {
        driver.quit();
    }
    
    @AfterTest
    public void destTest() {
        extent.flush();
    }
}



<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.google</groupId>
  <artifactId>locaters</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>locaters</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>4.19.1</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager -->
    <dependency>
      <groupId>io.github.bonigarcia</groupId>
      <artifactId>webdrivermanager</artifactId>
      <version>5.7.0</version>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to
      parent pom) -->
      <plugins>
        <!-- clean lifecycle, see
        https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see
        https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see
        https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
-------------------------------------------------------------------------------------------------------

1)
package Ixigo_Test;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import utils.EventHandler;

public class Test_ixigo {
	public static WebDriver driver;
	 private static final int PAGE_LOAD_TIME = 30;
	
 @BeforeMethod
    public WebDriver beforeMethod() throws MalformedURLException {
		ChromeOptions chromeOptions = new ChromeOptions();
		driver = new RemoteWebDriver(new URL("http://localhost:4444/"), chromeOptions);
		driver.get("https://www.ixigo.com/");
		driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
		WebDriverListener listener = new EventHandler();
		driver = new EventFiringDecorator<>(listener).decorate(driver);
		return driver;
        
    }
	@AfterMethod
    public void afterMethod() {
        if (driver != null) {
            driver.quit();
        }
    }

    @Test
    public void testIxigo() throws InterruptedException {
        WebElement RoundTrip = driver.findElement(By.cssSelector(
                "body > main > div.max-w-\\[1240px\\].m-auto.mainContainer > div.pt-30.mx-0.relative.px-20.xl\\:px-0 > div.border-none.shadow-500.p-20.flex.flex-col.gap-10.rounded-20.bg-white.undefined > div.flex.justify-between.items-center > div.flex.flex-col > div > button.flex.items-center.relative.transition-all.min-h-\\[40px\\].py-5.border.rounded-full.px-15.text-primary.hover\\:bg-primary-over.border-secondary.hover\\:bg-subbrand-50"));
        RoundTrip.click();

        Thread.sleep(2000);
        WebElement From = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[1]/div[1]/div"));
        From.click();
        Thread.sleep(2000);
        WebElement FromCity = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[1]/div[3]/div[2]/li"));
        FromCity.click();
        Thread.sleep(2000);
        WebElement To = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[2]/div[1]/div"));
        To.click();
        Thread.sleep(2000);
        WebElement ToCity = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[2]/div[3]/div[3]/li"));
        ToCity.click();

        Thread.sleep(2000);
        WebElement Depature = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[1]/div/div"));
        Depature.click();
        Thread.sleep(2000);
        WebElement DepatureDate = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[3]/div/div[1]/div[2]/div[1]/div/div/div[2]/button[3]"));
        DepatureDate.click();
        Thread.sleep(2000);
        WebElement Return = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[2]/div/div[1]"));
        Return.click();
        Thread.sleep(2000);
        WebElement ReturnDate = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[3]/div/div[1]/div[2]/div[1]/div/div/div[2]/button[4]"));
        ReturnDate.click();

        Thread.sleep(2000);
        WebElement TravelersClass = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[1]/div"));
        TravelersClass.click();
        Thread.sleep(2000);
        WebElement TravelerAdult = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[1]/div[1]/div[2]/div/button[2]"));
        TravelerAdult.click();
        Thread.sleep(2000);
        WebElement TravelerChild = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[1]/div[2]/div[2]/div/button[2]"));
        TravelerChild.click();
        Thread.sleep(2000);
        WebElement Class = driver.findElement(
                By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[1]/div[5]/div/div[3]"));
        Class.click();
        Thread.sleep(2000);
        WebElement Done = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[2]/button"));
        Done.click();

        Thread.sleep(2000);
        WebElement Search = driver.findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/button"));
        Search.click();

        Thread.sleep(5000);
        driver.quit();
    }
}
--------------------------
2)
package com.example;
 import java.net.MalformedURLException;
import java.net.URL;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
 /**
 * Unit test for simple App.
 */
 public class AppTest 
 {
 public static WebDriver driver;
@Test
 public void shouldAnswerWithTrue() throws MalformedURLException, InterruptedException
 {
ChromeOptions co = new ChromeOptions();
// WebDriverManager.chromedriver().setup();
// WebDriver driver = new ChromeDriver();
driver= new RemoteWebDriver(new URL("http://localhost:4444/"),co);
driver.get("https://www.shoppersstop.com");
Thread.sleep(8000);
driver.findElement(By.className("user-icon")).click();
driver.manage().window().maximize();
// String tit =driver.getTitle();
// String src =driver.getPageSource();
driver.navigate().to("https://www.google.com");
driver.navigate().back();
driver.close();
}
 }
------------------
3)
package Opentable_Test;



import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import java.util.Set;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import utils.EventHandler;


public class OpenTableTest {
    public static WebDriver driver;
    @SuppressWarnings("unused")
    private WebDriverWait wait;
    public final int IMPLICIT_WAIT_TIME=10;
    public final int PAGE_LOAD_TIME=5;
    

 @BeforeMethod
    public WebDriver beforeMethod() throws MalformedURLException {
        ChromeOptions chromeOptions = new ChromeOptions();
        driver = new RemoteWebDriver(new URL("http://localhost:4444/"), chromeOptions);
        driver.get("https://www.opentable.com");
        driver.manage().window().maximize();
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        //driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);
        return driver;
        
    }
    @Test
    public void opent() throws InterruptedException {
        Thread.sleep(10000);
        int numberOfArrowDownPresses = 3;
        int dropdown = 2;
        int timedropdown = 1;

        WebElement inputbox = driver.findElement(By.xpath("//input[@placeholder='Location, Restaurant, or Cuisine']"));
        inputbox.click();
        inputbox.sendKeys("Bangalore");

        for (int i = 0; i < numberOfArrowDownPresses; i++) {
            inputbox.sendKeys(Keys.ARROW_DOWN);
        }

        WebElement Letsgo = driver.findElement(By.xpath("/html/body/div[1]/div/div/main/header/div/span/div/div/div[2]/div[2]/button"));
            Letsgo.click();
        WebElement hotel = driver.findElement(By.xpath("/html/body/div[1]/div/div/main/div/div/div[2]/div[1]/div[2]/div[1]/div[1]/a/h6"));
            hotel.click();

        String parentWindowHandle = driver.getWindowHandle();
        Thread.sleep(3000);
        WebElement imageElement = driver
                .findElement(By.xpath("//*[@id='mainContent']/div/div/div[2]/div/div[1]/a/img"));
        imageElement.click();

        System.out.println("CLicked First Hotel");

        Set<String> windowHandles = driver.getWindowHandles();
        for (String windowHandle : windowHandles) {
            if (!windowHandle.equals(parentWindowHandle)) {
                driver.switchTo().window(windowHandle);
                JavascriptExecutor js = (JavascriptExecutor) driver;
                js.executeScript("window.scrollBy(0, 300);");
                break;
            }
        }

        WebElement partySizeDropdown = driver
                .findElement(By.xpath("//select[@id='restProfileSideBarDtpPartySizePicker']"));
        partySizeDropdown.click();

        try {
            for (int i = 0; i < dropdown; i++) {
                partySizeDropdown.sendKeys(Keys.ARROW_DOWN);
            }
            partySizeDropdown.sendKeys(Keys.ENTER);
        } catch (Exception e) {

        }
        System.out.println("CLicked 4 persons");
        try {
            WebElement datePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBarDtpDayPicker-label']"));
            datePicker.click();
            WebElement dateElement = driver.findElement(By.xpath(
                    "//*[@id='restProfileSideBarDtpDayPicker-wrapper']/div/div/div/table/tbody/tr[6]/td[7]/button"));
            dateElement.click();
            System.out.println("CLicked nov 14th date");

        } catch (Exception e) {

        }

        // Time picker
        try {
            WebElement timePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBartimePickerDtpPicker']"));
            timePicker.click();

            try {
                for (int i = 0; i < timedropdown; i++) {
                    timePicker.sendKeys(Keys.ARROW_UP);
                }
                timePicker.sendKeys(Keys.ENTER);
            } catch (Exception e) {

            }

            System.out.println("CLicked 6:30pm");

            WebElement findatime = driver
                    .findElement(By.xpath("//*[@id='mainContent']/div/div[2]/div[2]/div/article/div/div[5]/button"));
            findatime.click();
            System.out.println("CLicked Find a Time btn");
        } catch (Exception e) {

        }
        WebElement signinclick = driver.findElement(By.xpath("/html/body/div[1]/div/div/header/div[2]/div[2]/div[1]/button"));
        signinclick.click();
    }

    @AfterMethod
    public void afterMethod() {
        driver.quit();
    }

}
-----------------------------------------
portal 4)
package economic;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import jdk.internal.org.jline.utils.Log;
import java.util.List;
import java.util.Set;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.ExpectedConditions;
import utils.EventHandler;
public class TestEconomic {
public static WebDriver driver;
 private WebDriverWait wait;
public final int IMPLICIT_WAIT_TIME=10;
public final int PAGE_LOAD_TIME=10;
 
@BeforeMethod
 public void beforeMethod() throws MalformedURLException {
 ChromeOptions chromeOptions = new ChromeOptions();
driver = new RemoteWebDriver(new URL("http://localhost:4444"), chromeOptions);
 driver.manage().window().maximize();
 wait = new WebDriverWait(driver, Duration.ofSeconds(20));
 driver.get("https://economictimes.indiatimes.com/et-now/results");
 wait = new WebDriverWait(driver, Duration.ofSeconds(20));
 WebDriverListener listener = new EventHandler();
 driver = new EventFiringDecorator<>(listener).decorate(driver);
System.out.println("Browser");
 }
@Test
public void main() throws InterruptedException
{
driver.findElement(By.xpath("//*[@id=\"topnav\"]/div[10]/a")).click();
Thread.sleep(10000);
JavascriptExecutor JS=(JavascriptExecutor)driver;
 JS.executeScript("window.scrollBy(0,1000)", "");
driver.findElement(By.id("amcSelection")).click();
Thread.sleep(5000);
Select S=new Select(driver.findElement(By.id("amcSelection")));
 S.selectByVisibleText("Canara Robeco");
Thread.sleep(5000);
driver.findElement(By.id("schemenm")).click();
Thread.sleep(5000);
Select Se=new Select(driver.findElement(By.id("schemenm")));
 Se.selectByVisibleText("Canara Robeco Bluechip Equity Direct-G");
Thread.sleep(5000);
driver.findElement(By.id("anchor3")).click();
Thread.sleep(15000);
String currentTab = driver.getWindowHandle();
 for (String tab : driver.getWindowHandles()) {
 if (!tab.equals(currentTab)) {
 driver.switchTo().window(tab);
 break;
 }
 }
WebElement dropdownContainer = 
driver.findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[2]/ul/li/span"));
 dropdownContainer.click();
 WebElement Options = 
dropdownContainer.findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[2]/ul/li/ul/li[1]"));
 Options.click();
 Thread.sleep(2000);
 WebElement Container = 
driver.findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[3]/ul/li/span"));
 Container.click();
 
 WebElement Option = 
dropdownContainer.findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[3]/ul/li/ul/li[3]/spa
n"));
 Option.click();
 Thread.sleep(2000);
 WebElement Contain= 
driver.findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[4]/ul/li/span"));
 Contain.click();
 WebElement Opt = 
dropdownContainer.findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[4]/ul/li/ul/li[4]/spa
n"));
 Opt.click();
WebElement returns= driver.findElement(By.xpath("/html/body/main/div[10]/section[3]/div/ul/li[2]"));
returns.click();
Thread.sleep(5000);
WebElement 
printthis=driver.findElement(By.xpath("/html/body/main/div[10]/section[5]/div/div[1]/section[1]/div[2]/div[2]/ul/li[1]/ta
ble/tbody/tr[1]"));
System.out.println(printthis.getText());
}
@AfterMethod
public void afterMethod() throws InterruptedException {
Thread.sleep(15000);
driver.quit();
}
}
------------------------------------------------
5)
package PuriesHotel_Test;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import utils.*;
// import uistore.*;
public class Test_purihotel {
 public WebDriver driver;
 public final int IMPLICIT_WAIT_TIME = 10;
 public final int PAGE_LOAD_TIME = 5;
 // SpicejetUi sui = new SpicejetUi();
 // WebDriverHelper helper = new WebDriverHelper(driver);
 ExtentSparkReporter sparkReporter;
 ExtentReports extent;
 ExtentTest test;
 @BeforeMethod
 public void startUp() throws MalformedURLException {
 DesiredCapabilities dc = new DesiredCapabilities();
 dc.setBrowserName("chrome");
 driver = new RemoteWebDriver(new URL("http://localhost:4444/"), dc);
 driver.manage().window().maximize();
 driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(IMPLICIT_WAIT_TIME));
 driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
 driver.get("https://www.puriholidayresort.com/");
 WebDriverListener listener = new EventHandler();
 driver = new EventFiringDecorator<>(listener).decorate(driver);
 sparkReporter = new ExtentSparkReporter("./reports/Spicejet.html");
 extent = new ExtentReports();
 extent.attachReporter(sparkReporter);
 test = extent.createTest("Spicejet");
 }
 @Test(priority = 0)
 public void test1() throws Throwable {
 By getPopUpLocator = By.xpath("//button[@type='button']");
 By getCheckinDateLocator = By.xpath("//input[@id='arr_datepicker']");
 By getCheckinDate = By.xpath("//*[@id=\"ui-datepicker-div\"]/table/tbody/tr[3]/td[4]/a");
 By getBookButtonLocator = By.xpath("//button[@class='custom-btn']");
 // Click on the pop-up button
 Thread.sleep(3000);
 driver.findElement(getPopUpLocator).click();
 // Click on the check-in date field
 driver.findElement(getCheckinDateLocator).click();
 // Select the check-in date
 Thread.sleep(3000);
 driver.findElement(getCheckinDate).click();
 Thread.sleep(3000);
 driver.findElement(By.xpath("//*[@id=\"dep_datepicker\"]")).click();
 Thread.sleep(3000);
 driver.findElement(By.xpath("//*[@id=\"ui-datepicker-div\"]/table/tbody/tr[3]/td[6]/a")).click();
 // Click on the book button
 Thread.sleep(3000);
 driver.findElement(getBookButtonLocator).click();
 }
 
@Test(priority = 1)
 public void test2() throws Throwable {
 By getPopUpLocator = By.xpath("//button[@type='button']");
 By royalHoverLocator = By.xpath("//li[2]/a[contains(text(),'Rooms & Suites')]");
 By royalsuiteKeywordLocator = By.xpath("//a[contains(text(),'Royal Suite')]");
 By amenitiesDropdownLocator = By.xpath("//h3[contains(text(),'AMENITIES')]");
 // Click on the pop-up button
 Thread.sleep(3000);
 driver.findElement(getPopUpLocator).click();
 // Hover over the 'Rooms & Suites' link
 Thread.sleep(3000);
 Actions actions = new Actions(driver);
 actions.moveToElement(driver.findElement(royalHoverLocator)).build().perform();
 // Click on the 'Royal Suite' link
 Thread.sleep(3000);
 driver.findElement(royalsuiteKeywordLocator).click();
 // Click on the 'AMENITIES' dropdown
 Thread.sleep(3000);
 driver.findElement(amenitiesDropdownLocator).click();
 }
 @Test(priority = 2)
 public void test3() throws Throwable {
 By getPopUpLocator = By.xpath("//button[@type='button']");
 By navpuriLocator = By.xpath("//li[1]/a[contains(text(),'About Puri')]");
 By dropChilikLocator = By.xpath("//a[contains(text(),'Chilika Lake')]");
 By continLocator = By.xpath("//textarea[contains(text(),'Title your review - Describe your stay in one sentence or less. ')]");
 By butconLocator = By.xpath("//input[@value='Continue']");
 By familyLocator = By.xpath("//span[contains(text(),'Family')]");
// Click on the pop-up button
 Thread.sleep(3000);
 driver.findElement(getPopUpLocator).click();
 
 
 // Hover over 'About Puri' link
 Thread.sleep(3000);
 Actions actions = new Actions(driver);
 actions.moveToElement(driver.findElement(navpuriLocator)).build().perform();
 // Click on 'Chilika Lake' link
 Thread.sleep(3000);
 driver.findElement(dropChilikLocator).click();
 // Interact with the textarea
 Thread.sleep(4000);
 driver.findElement(continLocator).click();
 driver.findElement(continLocator).sendKeys("Excellent");
 // Click the 'Continue' button
 Thread.sleep(3000);
 driver.findElement(butconLocator).click();
 // Handle new tab/window if necessar
 String originalWindow = driver.getWindowHandle();
 
for (String windowHandle : driver.getWindowHandles()) {
 if (!originalWindow.contentEquals(windowHandle)) {
 driver.switchTo().window(windowHandle);
 break;
 }
 }
 // Click on 'Family'
 Thread.sleep(3000);
 driver.findElement(familyLocator).click();
 }
 @AfterMethod
 public void afterMethod() {
 driver.quit();
 extent.flush();
 }
}
pom.xml::

<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>ex</groupId>
  <artifactId>Milestone3</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <name>Milestone3</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <dependencies>
   <!-- https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager -->
<dependency>

    <groupId>io.github.bonigarcia</groupId>
    <artifactId>webdrivermanager</artifactId>
    <version>5.4.1</version>
</dependency>
<dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>7.8.0</version>
      <scope>test</scope>
    </dependency>
 <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.6</version>
    </dependency>

<dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>slf4j-simple</artifactId>
    <version>2.0.7</version>
    <scope>test</scope>
</dependency>



<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
<dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-java</artifactId>
    <version>4.11.0</version>
</dependency>

 <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
        <version>5.0.0</version>
    </dependency>
    <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId>
        <version>5.0.0</version>
    </dependency>
   
    <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>2.14.1</version> <!-- Use the appropriate version -->
    </dependency>
    <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>2.14.1</version> <!-- Use the appropriate version -->
    </dependency>
    <dependency>
      <groupId>com.aventstack</groupId>
      <artifactId>extentreports</artifactId>
      <version>5.0.9</version>
      <exclusions>
        <exclusion>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
   
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>gherkin</artifactId>
      <version>2.12.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-junit</artifactId>
      <version>1.2.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-core</artifactId>
      <version>1.2.5</version>
    </dependency>
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-java</artifactId>
      <version>1.2.5</version>
    </dependency>
<dependency>
    <groupId>log4j</groupId>
    <artifactId>log4j</artifactId>
    <version>1.2.17</version> <!-- Replace with your Log4j version -->
</dependency>

  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
----------------
quest-6,8)
package Opentable_Test;



import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import java.util.Set;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import utils.EventHandler;


public class OpenTableTest {
    public static WebDriver driver;
    @SuppressWarnings("unused")
    private WebDriverWait wait;
    public final int IMPLICIT_WAIT_TIME=10;
    public final int PAGE_LOAD_TIME=5;
    

 @BeforeMethod
    public WebDriver beforeMethod() throws MalformedURLException {
        ChromeOptions chromeOptions = new ChromeOptions();
        driver = new RemoteWebDriver(new URL("http://localhost:4444/"), chromeOptions);
        driver.get("https://www.opentable.com");
        driver.manage().window().maximize();
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        //driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);
        return driver;
        
    }
    @Test
    public void opent() throws InterruptedException {
        Thread.sleep(10000);
        int numberOfArrowDownPresses = 3;
        int dropdown = 2;
        int timedropdown = 1;

        WebElement inputbox = driver.findElement(By.xpath("//input[@placeholder='Location, Restaurant, or Cuisine']"));
        inputbox.click();
        inputbox.sendKeys("Bangalore");

        for (int i = 0; i < numberOfArrowDownPresses; i++) {
            inputbox.sendKeys(Keys.ARROW_DOWN);
        }

        WebElement Letsgo = driver.findElement(By.xpath("/html/body/div[1]/div/div/main/header/div/span/div/div/div[2]/div[2]/button"));
            Letsgo.click();
        WebElement hotel = driver.findElement(By.xpath("/html/body/div[1]/div/div/main/div/div/div[2]/div[1]/div[2]/div[1]/div[1]/a/h6"));
            hotel.click();

        String parentWindowHandle = driver.getWindowHandle();
        Thread.sleep(3000);
        WebElement imageElement = driver
                .findElement(By.xpath("//*[@id='mainContent']/div/div/div[2]/div/div[1]/a/img"));
        imageElement.click();

        System.out.println("CLicked First Hotel");

        Set<String> windowHandles = driver.getWindowHandles();
        for (String windowHandle : windowHandles) {
            if (!windowHandle.equals(parentWindowHandle)) {
                driver.switchTo().window(windowHandle);
                JavascriptExecutor js = (JavascriptExecutor) driver;
                js.executeScript("window.scrollBy(0, 300);");
                break;
            }
        }

        WebElement partySizeDropdown = driver
                .findElement(By.xpath("//select[@id='restProfileSideBarDtpPartySizePicker']"));
        partySizeDropdown.click();

        try {
            for (int i = 0; i < dropdown; i++) {
                partySizeDropdown.sendKeys(Keys.ARROW_DOWN);
            }
            partySizeDropdown.sendKeys(Keys.ENTER);
        } catch (Exception e) {

        }
        System.out.println("CLicked 4 persons");
        try {
            WebElement datePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBarDtpDayPicker-label']"));
            datePicker.click();
            WebElement dateElement = driver.findElement(By.xpath(
                    "//*[@id='restProfileSideBarDtpDayPicker-wrapper']/div/div/div/table/tbody/tr[6]/td[7]/button"));
            dateElement.click();
            System.out.println("CLicked nov 14th date");

        } catch (Exception e) {

        }

        // Time picker
        try {
            WebElement timePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBartimePickerDtpPicker']"));
            timePicker.click();

            try {
                for (int i = 0; i < timedropdown; i++) {
                    timePicker.sendKeys(Keys.ARROW_UP);
                }
                timePicker.sendKeys(Keys.ENTER);
            } catch (Exception e) {

            }

            System.out.println("CLicked 6:30pm");

            WebElement findatime = driver
                    .findElement(By.xpath("//*[@id='mainContent']/div/div[2]/div[2]/div/article/div/div[5]/button"));
            findatime.click();
            System.out.println("CLicked Find a Time btn");
        } catch (Exception e) {

        }
        WebElement signinclick = driver.findElement(By.xpath("/html/body/div[1]/div/div/header/div[2]/div[2]/div[1]/button"));
        signinclick.click();
    }

    @AfterMethod
    public void afterMethod() {
        driver.quit();
    }

}
-------------------------------------------------------------------------------------------------------

1. ixigo


package Ixigo_Test;

import java.io.FileInputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;
import io.github.bonigarcia.wdm.WebDriverManager;

import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import utils.EventHandler;

public class AppTest {
        private static final long PAGE_LOAD_TIME = 10;

    @Test

    public void test() throws InterruptedException, MalformedURLException {
        ChromeOptions chromeOptions = new ChromeOptions();
        WebDriver driver = new RemoteWebDriver(new URL("http://localhost:4444/"),
        chromeOptions);
        driver.manage().window().maximize();
        driver.get("https://www.ixigo.com");
        driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);
        Thread.sleep(5000);
        WebElement RoundTrip = driver.findElement(By.cssSelector(
                "body > main > div.max-w-\\[1240px\\].m-auto.mainContainer > div.pt-30.mx-0.relative.px-20.xl\\:px-0 > div.border-none.shadow-500.p-20.flex.flex-col.gap-10.rounded-20.bg-white.undefined > div.flex.justify-between.items-center > div.flex.flex-col > div > button.flex.items-center.relative.transition-all.min-h-\\[40px\\].py-5.border.rounded-full.px-15.text-primary.hover\\:bg-primary-over.border-secondary.hover\\:bg-subbrand-50"));
        RoundTrip.click();

        Thread.sleep(2000);
        WebElement From = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[1]/div[1]/div"));
        From.click();
        Thread.sleep(2000);
        WebElement FromCity = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[1]/div[3]/div[2]/li"));
        FromCity.click();
        Thread.sleep(2000);
        WebElement To = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[2]/div[1]/div"));
        To.click();
        Thread.sleep(2000);
        WebElement ToCity = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[2]/div[3]/div[3]/li"));
        ToCity.click();

        Thread.sleep(2000);
        WebElement Depature = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[1]/div/div"));
        Depature.click();
        Thread.sleep(2000);
        WebElement DepatureDate = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[3]/div/div[1]/div[2]/div[1]/div/div/div[2]/button[3]"));
        DepatureDate.click();
        Thread.sleep(2000);
        WebElement Return = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[2]/div/div[1]"));
        Return.click();
        Thread.sleep(2000);
        WebElement ReturnDate = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[3]/div/div[1]/div[2]/div[1]/div/div/div[2]/button[4]"));
        ReturnDate.click();

        Thread.sleep(2000);
        WebElement TravelersClass = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[1]/div"));
        TravelersClass.click();
        Thread.sleep(2000);
        WebElement TravelerAdult = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[1]/div[1]/div[2]/div/button[2]"));
        TravelerAdult.click();
        Thread.sleep(2000);
        WebElement TravelerChild = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[1]/div[2]/div[2]/div/button[2]"));
        TravelerChild.click();
        Thread.sleep(2000);
        WebElement Class = driver.findElement(
                By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[1]/div[5]/div/div[3]"));
        Class.click();
        Thread.sleep(2000);
        WebElement Done = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[2]/button"));
        Done.click();

        Thread.sleep(2000);
        WebElement Search = driver.findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/button"));
        Search.click();

        Thread.sleep(5000);
        driver.quit();
    }

}


2.selenium basics


package com.example;

import java.net.URL;


import java.net.MalformedURLException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

public class AppTest {
    public WebDriver driver;

    @BeforeMethod
    public void before() throws Exception{
        ChromeOptions co = new ChromeOptions();
        driver = new RemoteWebDriver(new URL("http://localhost:4444"), co);
    }
    
    
    @Test
    public  void shouldAnswerWithTrue() throws Exception{
        
        driver.get("https://www.shoppersstop.com/");
        driver.manage().window().maximize();
        Thread.sleep(3000);
        String pageTitle = driver.getTitle();
        System.out.println("Title of the page: " + pageTitle);
        Thread.sleep(3000);
        String pageSource = driver.getPageSource();
        
        int pageSourceLength = pageSource.length();
        System.out.println("Length of the page source: " + pageSourceLength);
        Thread.sleep(3000);
        
        driver.get("https://www.google.com");
        Thread.sleep(3000);

        driver.navigate().back();
        String currentUrl = driver.getCurrentUrl();
        String expectedUrl = "https://www.shoppersstop.com/";
        if (currentUrl.equals(expectedUrl)) {
            System.out.println("Current URL matches with ShoppersStop URL.");
        } else {
            System.out.println("Current URL does not match with ShoppersStop URL.");
        }

        driver.quit();
    }
}


3.opentable

package Opentable_Test;



import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import java.util.Set;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import utils.EventHandler;


public class OpenTableTest {
    public static WebDriver driver;
    @SuppressWarnings("unused")
    private WebDriverWait wait;
    public final int IMPLICIT_WAIT_TIME=10;
    public final int PAGE_LOAD_TIME=5;
    

 @BeforeMethod
    public WebDriver beforeMethod() throws MalformedURLException {
        ChromeOptions chromeOptions = new ChromeOptions();
        driver = new RemoteWebDriver(new URL("http://localhost:4444/"), chromeOptions);
        driver.get("https://www.opentable.com");
        driver.manage().window().maximize();
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        //driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);
        return driver;
        
    }
    @Test
    public void opent() throws InterruptedException {
        Thread.sleep(10000);
        int numberOfArrowDownPresses = 3;
        int dropdown = 2;
        int timedropdown = 1;

        WebElement inputbox = driver.findElement(By.xpath("//input[@placeholder='Location, Restaurant, or Cuisine']"));
        inputbox.click();
        inputbox.sendKeys("Bangalore");

        for (int i = 0; i < numberOfArrowDownPresses; i++) {
            inputbox.sendKeys(Keys.ARROW_DOWN);
        }

        WebElement Letsgo = driver.findElement(By.xpath("/html/body/div[1]/div/div/main/header/div/span/div/div/div[2]/div[2]/button"));
            Letsgo.click();
        WebElement hotel = driver.findElement(By.xpath("/html/body/div[1]/div/div/main/div/div/div[2]/div[1]/div[2]/div[1]/div[1]/a/h6"));
            hotel.click();

        String parentWindowHandle = driver.getWindowHandle();
        Thread.sleep(3000);
        WebElement imageElement = driver
                .findElement(By.xpath("//*[@id='mainContent']/div/div/div[2]/div/div[1]/a/img"));
        imageElement.click();

        System.out.println("CLicked First Hotel");

        Set<String> windowHandles = driver.getWindowHandles();
        for (String windowHandle : windowHandles) {
            if (!windowHandle.equals(parentWindowHandle)) {
                driver.switchTo().window(windowHandle);
                JavascriptExecutor js = (JavascriptExecutor) driver;
                js.executeScript("window.scrollBy(0, 300);");
                break;
            }
        }

        WebElement partySizeDropdown = driver
                .findElement(By.xpath("//select[@id='restProfileSideBarDtpPartySizePicker']"));
        partySizeDropdown.click();

        try {
            for (int i = 0; i < dropdown; i++) {
                partySizeDropdown.sendKeys(Keys.ARROW_DOWN);
            }
            partySizeDropdown.sendKeys(Keys.ENTER);
        } catch (Exception e) {

        }
        System.out.println("CLicked 4 persons");
        try {
            WebElement datePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBarDtpDayPicker-label']"));
            datePicker.click();
            WebElement dateElement = driver.findElement(By.xpath(
                    "//*[@id='restProfileSideBarDtpDayPicker-wrapper']/div/div/div/table/tbody/tr[6]/td[7]/button"));
            dateElement.click();
            System.out.println("CLicked nov 14th date");

        } catch (Exception e) {

        }

        // Time picker
        try {
            WebElement timePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBartimePickerDtpPicker']"));
            timePicker.click();

            try {
                for (int i = 0; i < timedropdown; i++) {
                    timePicker.sendKeys(Keys.ARROW_UP);
                }
                timePicker.sendKeys(Keys.ENTER);
            } catch (Exception e) {

            }

            System.out.println("CLicked 6:30pm");

            WebElement findatime = driver
                    .findElement(By.xpath("//*[@id='mainContent']/div/div[2]/div[2]/div/article/div/div[5]/button"));
            findatime.click();
            System.out.println("CLicked Find a Time btn");
        } catch (Exception e) {

        }
        WebElement signinclick = driver.findElement(By.xpath("/html/body/div[1]/div/div/header/div[2]/div[2]/div[1]/button"));
        signinclick.click();
    }

    @AfterMethod
    public void afterMethod() {
        driver.quit();
    }

}

4.Economictimes

package economic;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import jdk.internal.org.jline.utils.Log;
import java.util.List;
import java.util.Set;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.ExpectedConditions;
import utils.EventHandler;


public class TestEconomic {
	public static WebDriver driver;
    private WebDriverWait wait;
	public final int IMPLICIT_WAIT_TIME=10;
	public final int PAGE_LOAD_TIME=10;
    
	 @BeforeMethod
	    public void beforeMethod() throws MalformedURLException  {
	        ChromeOptions chromeOptions = new ChromeOptions();
			driver = new RemoteWebDriver(new URL("http://localhost:4444"), chromeOptions);
	        driver.manage().window().maximize();
	        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
	        driver.get("https://economictimes.indiatimes.com/et-now/results");
	        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
	        WebDriverListener listener = new EventHandler();
	        driver = new EventFiringDecorator<>(listener).decorate(driver);
			System.out.println("Browser");
	    }

		@Test
		public void main() throws InterruptedException
		{
			driver.findElement(By.xpath("//*[@id=\"topnav\"]/div[10]/a")).click();
			Thread.sleep(10000);
			JavascriptExecutor JS=(JavascriptExecutor)driver;
        	JS.executeScript("window.scrollBy(0,1000)", "");
			driver.findElement(By.id("amcSelection")).click();
			Thread.sleep(5000);
			Select S=new Select(driver.findElement(By.id("amcSelection")));
        	S.selectByVisibleText("Canara Robeco");
			Thread.sleep(5000);
			driver.findElement(By.id("schemenm")).click();
			Thread.sleep(5000);
			Select Se=new Select(driver.findElement(By.id("schemenm")));
        	Se.selectByVisibleText("Canara Robeco Bluechip Equity Direct-G");
			Thread.sleep(5000);
			driver.findElement(By.id("anchor3")).click();
			Thread.sleep(15000);

			String currentTab = driver.getWindowHandle();
        for (String tab : driver.getWindowHandles()) {
            if (!tab.equals(currentTab)) {
                driver.switchTo().window(tab);
                break;
            }
        }

			WebElement dropdownContainer = driver.findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[2]/ul/li/span"));
        dropdownContainer.click();

        WebElement Options = dropdownContainer.findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[2]/ul/li/ul/li[1]"));
        Options.click();
        Thread.sleep(2000);
        WebElement Container = driver.findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[3]/ul/li/span"));
        Container.click();
        
        WebElement Option = dropdownContainer.findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[3]/ul/li/ul/li[3]/span"));
        Option.click();

        Thread.sleep(2000);

        WebElement Contain= driver.findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[4]/ul/li/span"));
        Contain.click();

        WebElement Opt = dropdownContainer.findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[4]/ul/li/ul/li[4]/span"));
        Opt.click();

		WebElement returns= driver.findElement(By.xpath("/html/body/main/div[10]/section[3]/div/ul/li[2]"));
		returns.click();
		Thread.sleep(5000);

		WebElement printthis=driver.findElement(By.xpath("/html/body/main/div[10]/section[5]/div/div[1]/section[1]/div[2]/div[2]/ul/li[1]/table/tbody/tr[1]"));
		System.out.println(printthis.getText());
		}
		
		@AfterMethod
	public void afterMethod() throws InterruptedException {
		Thread.sleep(15000);
		driver.quit();
	}
}

5.puriresort

package PuriesHotel_Test;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import ch.qos.logback.core.joran.action.Action;
import utils.*;


//Portal Code
public class AppTest {

    public WebDriver driver;
    public final int IMPLICIT_WAIT_TIME = 10;
    public final int PAGE_LOAD_TIME = 5;
    // WebDriverHelper helper = new WebDriverHelper(driver);
    ExtentSparkReporter sparkReporter;
    ExtentReports extent;
    ExtentTest test;

    @BeforeMethod
    public void startUp() throws MalformedURLException {
        DesiredCapabilities dc = new DesiredCapabilities();
        dc.setBrowserName("chrome");
        driver = new RemoteWebDriver(new URL("http://localhost:4444/"), dc);

        driver.manage().window().maximize();

        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(IMPLICIT_WAIT_TIME));
        driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));

        driver.get("https://www.puriholidayresort.com/");

        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);

        sparkReporter = new ExtentSparkReporter("./reports/PuriHoli.html");
        extent = new ExtentReports();
        extent.attachReporter(sparkReporter);
        
        test = extent.createTest("HolyResort");
        driver.manage().window().maximize();


        // WebDriverListener listener = new EventHandler();
        // driver = new EventFiringDecorator<>(listener).decorate(driver);
    }

    @Test(priority = 0)
    public void test1() throws Exception {
        Thread.sleep(3000);
        driver.findElement(By.xpath("//button[@type='button']")).click();

        driver.findElement(By.xpath("//input[@id='arr_datepicker']")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//a[@class='ui-state-default' and contains(text(),'30')]")).click();

        Thread.sleep(3000);
        driver.findElement(By.xpath("//button[@class='custom-btn']")).click();
    }

    @Test(priority = 1)
    public void test2() throws Exception {
        Thread.sleep(3000);
        driver.findElement(By.xpath("//button[@type='button']")).click();

        Thread.sleep(3000);
        Actions actions = new Actions(driver);
        actions.moveToElement(driver.findElement(By.xpath("//li[2]/a[contains(text(),'Rooms & Suites')]"))).build()
                .perform();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//a[contains(text(),'Royal Suite')]")).click();

        Thread.sleep(3000);
        driver.findElement(By.xpath("//h3[contains(text(),'AMENITIES')]")).click();
    }

    @Test(priority = 2)
    public void test3() throws Exception {
        Thread.sleep(3000);
        By continLocator = By.xpath(
                "//textarea[contains(text(),'Title your review - Describe your stay in one sentence or less. ')]");
        Thread.sleep(3000);
        driver.findElement(By.xpath("//button[@type='button']")).click();

        Thread.sleep(3000);
        Actions actions = new Actions(driver);
        actions.moveToElement(driver.findElement(By.xpath("//li[1]/a[contains(text(),'About Puri')]"))).build()
                .perform();

        Thread.sleep(3000);
        driver.findElement(By.xpath("//a[contains(text(),'Chilika Lake')]")).click();

        Thread.sleep(4000);
        driver.findElement(continLocator).click();
        driver.findElement(continLocator).sendKeys("Excellent");

        Thread.sleep(3000);
        driver.findElement(By.xpath("//input[@value='Continue']")).click();

        String originalWindow = driver.getWindowHandle();
        for (String windowHandle : driver.getWindowHandles()) {
            if (!originalWindow.contentEquals(windowHandle)) {
                driver.switchTo().window(windowHandle);
                break;
            }
        }

        Thread.sleep(3000);
        driver.findElement(By.xpath("//span[contains(text(),'Family')]")).click();
    }

    @AfterMethod
    public void afterMethod() {
        driver.quit();
    }

    @AfterTest
    public void setupreport() {
        extent.flush();
    }
}

pom.xml

<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.max</groupId>
  <artifactId>holiday</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>holiday</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
  </properties>

  <dependencies>


    <!-- https://mvnrepository.com/artifact/com.aventstack/extentreports -->
    <dependency>
      <groupId>com.aventstack</groupId>
      <artifactId>extentreports</artifactId>
      <version>5.1.1</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager -->
    <dependency>

      <groupId>io.github.bonigarcia</groupId>
      <artifactId>webdrivermanager</artifactId>
      <version>5.4.1</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.6</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>2.0.7</version>
      <scope>test</scope>
    </dependency>


    <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>4.11.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>5.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>5.0.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.14.1</version> <!-- Use the appropriate version -->
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.14.1</version> <!-- Use the appropriate version -->
    </dependency>

    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>7.8.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version> <!-- Replace with your Log4j version -->
    </dependency>
  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to
      parent pom) -->
      <plugins>
        <!-- clean lifecycle, see
        https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see
        https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see
        https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>

8. opentable


package Opentable_Test;



import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import java.util.Set;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import utils.EventHandler;


public class OpenTableTest {
    public static WebDriver driver;
    @SuppressWarnings("unused")
    private WebDriverWait wait;
    public final int IMPLICIT_WAIT_TIME=10;
    public final int PAGE_LOAD_TIME=5;
    

 @BeforeMethod
    public WebDriver beforeMethod() throws MalformedURLException {
        ChromeOptions chromeOptions = new ChromeOptions();
        driver = new RemoteWebDriver(new URL("http://localhost:4444/"), chromeOptions);
        driver.get("https://www.opentable.com");
        driver.manage().window().maximize();
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        //driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);
        return driver;
        
    }
    @Test
    public void opent() throws InterruptedException {
        Thread.sleep(10000);
        int numberOfArrowDownPresses = 3;
        int dropdown = 2;
        int timedropdown = 1;

        WebElement inputbox = driver.findElement(By.xpath("//input[@placeholder='Location, Restaurant, or Cuisine']"));
        inputbox.click();
        inputbox.sendKeys("Bangalore");

        for (int i = 0; i < numberOfArrowDownPresses; i++) {
            inputbox.sendKeys(Keys.ARROW_DOWN);
        }

        WebElement Letsgo = driver.findElement(By.xpath("/html/body/div[1]/div/div/main/header/div/span/div/div/div[2]/div[2]/button"));
            Letsgo.click();
        WebElement hotel = driver.findElement(By.xpath("/html/body/div[1]/div/div/main/div/div/div[2]/div[1]/div[2]/div[1]/div[1]/a/h6"));
            hotel.click();

        String parentWindowHandle = driver.getWindowHandle();
        Thread.sleep(3000);
        WebElement imageElement = driver
                .findElement(By.xpath("//*[@id='mainContent']/div/div/div[2]/div/div[1]/a/img"));
        imageElement.click();

        System.out.println("CLicked First Hotel");

        Set<String> windowHandles = driver.getWindowHandles();
        for (String windowHandle : windowHandles) {
            if (!windowHandle.equals(parentWindowHandle)) {
                driver.switchTo().window(windowHandle);
                JavascriptExecutor js = (JavascriptExecutor) driver;
                js.executeScript("window.scrollBy(0, 300);");
                break;
            }
        }

        WebElement partySizeDropdown = driver
                .findElement(By.xpath("//select[@id='restProfileSideBarDtpPartySizePicker']"));
        partySizeDropdown.click();

        try {
            for (int i = 0; i < dropdown; i++) {
                partySizeDropdown.sendKeys(Keys.ARROW_DOWN);
            }
            partySizeDropdown.sendKeys(Keys.ENTER);
        } catch (Exception e) {

        }
        System.out.println("CLicked 4 persons");
        try {
            WebElement datePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBarDtpDayPicker-label']"));
            datePicker.click();
            WebElement dateElement = driver.findElement(By.xpath(
                    "//*[@id='restProfileSideBarDtpDayPicker-wrapper']/div/div/div/table/tbody/tr[6]/td[7]/button"));
            dateElement.click();
            System.out.println("CLicked nov 14th date");

        } catch (Exception e) {

        }

        // Time picker
        try {
            WebElement timePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBartimePickerDtpPicker']"));
            timePicker.click();

            try {
                for (int i = 0; i < timedropdown; i++) {
                    timePicker.sendKeys(Keys.ARROW_UP);
                }
                timePicker.sendKeys(Keys.ENTER);
            } catch (Exception e) {

            }

            System.out.println("CLicked 6:30pm");

            WebElement findatime = driver
                    .findElement(By.xpath("//*[@id='mainContent']/div/div[2]/div[2]/div/article/div/div[5]/button"));
            findatime.click();
            System.out.println("CLicked Find a Time btn");
        } catch (Exception e) {

        }
        WebElement signinclick = driver.findElement(By.xpath("/html/body/div[1]/div/div/header/div[2]/div[2]/div[1]/button"));
        signinclick.click();
    }

    @AfterMethod
    public void afterMethod() {
        driver.quit();
    }

}


9.

10.


---------------------------------------------------------------
---------------------------------------------------------------
---------------------------------------------------------------
---------------------------------------------------------------
---------------------------------------------------------------
---------------------------------------------------------------



/******************************************************************************

WARNIG!!!
All the best bro
dont't cry if you got test cases failed
you'll get better days...

*******************************************************************************/
ixigo q1

package Ixigo_Test;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import utils.EventHandler;

public class Test_ixigo {
	public static WebDriver driver;
	
 @BeforeMethod
    public WebDriver beforeMethod() throws MalformedURLException {
		ChromeOptions chromeOptions = new ChromeOptions();
		driver = new RemoteWebDriver(new URL("http://localhost:4444/"), chromeOptions);
		driver.get("https://www.ixigo.com/");
		driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(20));
		WebDriverListener listener = new EventHandler();
		driver = new EventFiringDecorator<>(listener).decorate(driver);
		return driver;
        
    }
 @Test

    public void test() throws InterruptedException {
        
        WebElement RoundTrip = driver.findElement(By.cssSelector(
                "body > main > div.max-w-\\[1240px\\].m-auto.mainContainer > div.pt-30.mx-0.relative.px-20.xl\\:px-0 > div.border-none.shadow-500.p-20.flex.flex-col.gap-10.rounded-20.bg-white.undefined > div.flex.justify-between.items-center > div.flex.flex-col > div > button.flex.items-center.relative.transition-all.min-h-\\[40px\\].py-5.border.rounded-full.px-15.text-primary.hover\\:bg-primary-over.border-secondary.hover\\:bg-subbrand-50"));
        RoundTrip.click();

        Thread.sleep(2000);
        WebElement From = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[1]/div[1]/div"));
        From.click();
        Thread.sleep(2000);
        WebElement FromCity = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[1]/div[3]/div[2]/li"));
        FromCity.click();
        Thread.sleep(2000);
        WebElement To = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[2]/div[1]/div"));
        To.click();
        Thread.sleep(2000);
        WebElement ToCity = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[1]/div[2]/div[3]/div[3]/li"));
        ToCity.click();

        Thread.sleep(2000);
        WebElement Depature = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[1]/div/div"));
        Depature.click();
        Thread.sleep(2000);
        WebElement DepatureDate = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[3]/div/div[1]/div[2]/div[1]/div/div/div[2]/button[3]"));
        DepatureDate.click();
        Thread.sleep(2000);
        WebElement Return = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[2]/div/div[1]"));
        Return.click();
        Thread.sleep(2000);
        WebElement ReturnDate = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[2]/div[3]/div/div[1]/div[2]/div[1]/div/div/div[2]/button[4]"));
        ReturnDate.click();

        Thread.sleep(2000);
        WebElement TravelersClass = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[1]/div"));
        TravelersClass.click();
        Thread.sleep(2000);
        WebElement TravelerAdult = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[1]/div[1]/div[2]/div/button[2]"));
        TravelerAdult.click();
        Thread.sleep(2000);
        WebElement TravelerChild = driver.findElement(By.xpath(
                "/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[1]/div[2]/div[2]/div/button[2]"));
        TravelerChild.click();
        Thread.sleep(2000);
        WebElement Class = driver.findElement(
                By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[1]/div[5]/div/div[3]"));
        Class.click();
        Thread.sleep(2000);
        WebElement Done = driver
                .findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/div[3]/div[2]/div/div[2]/button"));
        Done.click();

        Thread.sleep(2000);
        WebElement Search = driver.findElement(By.xpath("/html/body/main/div[2]/div[1]/div[3]/div[2]/button"));
        Search.click();

        Thread.sleep(5000);
        driver.quit();
    }
	
	}
-----------------------------------------------------------------------------------
Q5-D9-PAH

package PuriesHotel_Test;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import utils.*;


//Portal Code
public class Test_purihotel {

    public WebDriver driver;
    public final int IMPLICIT_WAIT_TIME = 10;
    public final int PAGE_LOAD_TIME = 5;
    // WebDriverHelper helper = new WebDriverHelper(driver);
    ExtentSparkReporter sparkReporter;
    ExtentReports extent;
    ExtentTest test;

    @BeforeMethod
    public void startUp() throws MalformedURLException {
        DesiredCapabilities dc = new DesiredCapabilities();
        dc.setBrowserName("chrome");
        driver = new RemoteWebDriver(new URL("http://localhost:4444/"), dc);

        driver.manage().window().maximize();

        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(IMPLICIT_WAIT_TIME));
        driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));

        driver.get("https://www.puriholidayresort.com/");

        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);

        sparkReporter = new ExtentSparkReporter("./reports/PuriHoli.html");
        extent = new ExtentReports();
        extent.attachReporter(sparkReporter);
        
        test = extent.createTest("HolyResort");
        driver.manage().window().maximize();


        // WebDriverListener listener = new EventHandler();
        // driver = new EventFiringDecorator<>(listener).decorate(driver);
    }

    @Test(priority = 0)
    public void test1() throws Exception {
        Thread.sleep(3000);
        driver.findElement(By.xpath("//button[@type='button']")).click();

        driver.findElement(By.xpath("//input[@id='arr_datepicker']")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//a[@class='ui-state-default' and contains(text(),'30')]")).click();

        Thread.sleep(3000);
        driver.findElement(By.xpath("//button[@class='custom-btn']")).click();
    }

    @Test(priority = 1)
    public void test2() throws Exception {
        Thread.sleep(3000);
        driver.findElement(By.xpath("//button[@type='button']")).click();

        Thread.sleep(3000);
        Actions actions = new Actions(driver);
        actions.moveToElement(driver.findElement(By.xpath("//li[2]/a[contains(text(),'Rooms & Suites')]"))).build()
                .perform();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//a[contains(text(),'Royal Suite')]")).click();

        Thread.sleep(3000);
        driver.findElement(By.xpath("//h3[contains(text(),'AMENITIES')]")).click();
    }

    @Test(priority = 2)
    public void test3() throws Exception {
        Thread.sleep(3000);
        By continLocator = By.xpath(
                "//textarea[contains(text(),'Title your review - Describe your stay in one sentence or less. ')]");
        Thread.sleep(3000);
        driver.findElement(By.xpath("//button[@type='button']")).click();

        Thread.sleep(3000);
        Actions actions = new Actions(driver);
        actions.moveToElement(driver.findElement(By.xpath("//li[1]/a[contains(text(),'About Puri')]"))).build()
                .perform();

        Thread.sleep(3000);
        driver.findElement(By.xpath("//a[contains(text(),'Chilika Lake')]")).click();

        Thread.sleep(4000);
        driver.findElement(continLocator).click();
        driver.findElement(continLocator).sendKeys("Excellent");

        Thread.sleep(3000);
        driver.findElement(By.xpath("//input[@value='Continue']")).click();

        String originalWindow = driver.getWindowHandle();
        for (String windowHandle : driver.getWindowHandles()) {
            if (!originalWindow.contentEquals(windowHandle)) {
                driver.switchTo().window(windowHandle);
                break;
            }
        }

        Thread.sleep(3000);
        driver.findElement(By.xpath("//span[contains(text(),'Family')]")).click();
    }

    @AfterMethod
    public void afterMethod() {
        driver.quit();
    }

    @AfterTest
    public void setupreport() {
        extent.flush();
    }
}
POM
<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>ex</groupId>
  <artifactId>Milestone3</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <name>Milestone3</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <dependencies>
   <!-- https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager -->
<dependency>

    <groupId>io.github.bonigarcia</groupId>
    <artifactId>webdrivermanager</artifactId>
    <version>5.4.1</version>
</dependency>
 <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.6</version>
    </dependency>

<dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>slf4j-simple</artifactId>
    <version>2.0.7</version>
    <scope>test</scope>
</dependency>



<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
<dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-java</artifactId>
    <version>4.11.0</version>
</dependency>

 <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
        <version>5.0.0</version>
    </dependency>
    <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId>
        <version>5.0.0</version>
    </dependency>
   
    <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>2.14.1</version> <!-- Use the appropriate version -->
    </dependency>
    <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>2.14.1</version> <!-- Use the appropriate version -->
    </dependency>
    <dependency>
      <groupId>com.aventstack</groupId>
      <artifactId>extentreports</artifactId>
      <version>5.0.9</version>
      <exclusions>
        <exclusion>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>7.8.0</version>
      <scope>test</scope>
    </dependency>
   
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>gherkin</artifactId>
      <version>2.12.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-junit</artifactId>
      <version>1.2.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-core</artifactId>
      <version>1.2.5</version>
    </dependency>
    <dependency>
      <groupId>info.cukes</groupId>
      <artifactId>cucumber-java</artifactId>
      <version>1.2.5</version>
    </dependency>
<dependency>
    <groupId>log4j</groupId>
    <artifactId>log4j</artifactId>
    <version>1.2.17</version> <!-- Replace with your Log4j version -->
</dependency>

  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
-----------------------------------------------------------------------------------
D10-CE
11
package Groww_Test;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import utils.EventHandler;
public class Test_groww {
    private static final long PAGE_LOAD_TIME = 30;
	public static WebDriver driver;
	

 @BeforeMethod
    public WebDriver beforeMethod() throws MalformedURLException {
		ChromeOptions chromeOptions = new ChromeOptions();
		driver = new RemoteWebDriver(new URL("http://localhost:4444/"), chromeOptions);
        driver.manage().window().maximize();
		driver.get("https://groww.in/");
		driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
        WebDriverListener listener = new EventHandler();
		driver = new EventFiringDecorator<>(listener).decorate(driver);
		return driver;
    }

 @Test
 	public void test () throws InterruptedException {

		driver.manage().window().maximize();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(PAGE_LOAD_TIME));
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(35));
        JavascriptExecutor js = (JavascriptExecutor) driver;

        WebElement QuickLinks = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id=\"footer\"]/div/div[1]/div/div[1]/div[2]/div[3]/div")));
        js.executeScript("arguments[0].scrollIntoView(true);", QuickLinks);
        QuickLinks.click();
        wait.until(ExpectedConditions.elementToBeClickable(By.linkText("Calculators"))).click();
        WebElement HomeLoanEMI = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id=\"root\"]/div[2]/div/a[15]/div")));
        HomeLoanEMI.click();
        WebElement LoanAmount = wait.until(ExpectedConditions.elementToBeClickable(By.id("LOAN_AMOUNT")));
        LoanAmount.clear();
        LoanAmount.sendKeys("2300000");
        WebElement LoanInterest = wait.until(ExpectedConditions.elementToBeClickable(By.id("RATE_OF_INTEREST")));
        LoanInterest.clear();
        LoanInterest.sendKeys("8");
        WebElement LoanYear = wait.until(ExpectedConditions.elementToBeClickable(By.id("LOAN_TENURE")));
        LoanYear.clear();
        LoanYear.sendKeys("20");
        WebElement ResultTable = driver.findElement(By.className("tb10Table"));
        List<WebElement> Result = ResultTable.findElements(By.xpath("./tr/td[2]/span"));
        System.out.println("Monthly EMI: ₹"+Result.get(0).getText());
        System.out.println("Principal Amount: ₹"+Result.get(1).getText());
        System.out.println("Total Interest: ₹"+Result.get(2).getText());
        System.out.println("Total Amount: ₹"+Result.get(3).getText());
 	}

 @AfterMethod
	public void teardown () {
		driver.quit();
	}
}
-----------------------------------------------------------------------------------
webelement
CE - 2
4
package economic;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import jdk.internal.org.jline.utils.Log;
import utils.EventHandler;

import java.util.List;
import java.util.Set;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.ExpectedConditions;

@SuppressWarnings("unused")
public class TestEconomic {
    public static WebDriver driver;
    @SuppressWarnings("unused")
    private WebDriverWait wait;
    public final int IMPLICIT_WAIT_TIME = 10;
    public final int PAGE_LOAD_TIME = 10;

    @BeforeMethod
    public void beforeMethod() throws MalformedURLException {
        // ChromeOptions chromeOptions = new ChromeOptions();
        // chromeOptions.addArguments("--headless"); // Run in headless mode
        // driver = new RemoteWebDriver(new URL("http://localhost:4444/wd/hub"), chromeOptions); // Use localhost for Selenium Grid
        // driver.manage().window().maximize();
        // driver.manage().timeouts().implicitlyWait(IMPLICIT_WAIT_TIME, TimeUnit.SECONDS);
        // driver.manage().timeouts().pageLoadTimeout(PAGE_LOAD_TIME, TimeUnit.SECONDS);
        // wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        // driver.get("https://economictimes.indiatimes.com/et-now/results");
        // System.out.println("Browser opened and navigated to the Economic Times website");

        // Portal
        ChromeOptions chromeOptions = new ChromeOptions();
        driver = new RemoteWebDriver(new URL("http://localhost:4444"),
        chromeOptions);
        driver.manage().window().maximize();
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        driver.get("https://economictimes.indiatimes.com/et-now/results");
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);
        System.out.println("Browser");

    }

    @Test
    public void economic() throws InterruptedException {
       driver.findElement(By.xpath("//*[@id=\"topnav\"]/div[10]/a")).click();
        Thread.sleep(10000);
        JavascriptExecutor JS = (JavascriptExecutor) driver;
        JS.executeScript("window.scrollBy(0,1000)", "");
        driver.findElement(By.id("amcSelection")).click();
        Thread.sleep(5000);
        Select S = new Select(driver.findElement(By.id("amcSelection")));
        S.selectByVisibleText("Canara Robeco");
        Thread.sleep(5000);
        driver.findElement(By.id("schemenm")).click();
        Thread.sleep(5000);
        Select Se = new Select(driver.findElement(By.id("schemenm")));
        Se.selectByVisibleText("Canara Robeco Bluechip Equity Direct-G");
        Thread.sleep(5000);
        driver.findElement(By.id("anchor3")).click();
        Thread.sleep(15000);

        String currentTab = driver.getWindowHandle();
        for (String tab : driver.getWindowHandles()) {
            if (!tab.equals(currentTab)) {
                driver.switchTo().window(tab);
                break;
            }
        }

        WebElement dropdownContainer = driver
                .findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[2]/ul/li/span"));
        dropdownContainer.click();

        WebElement Options = dropdownContainer
                .findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[2]/ul/li/ul/li[1]"));
        Options.click();
        Thread.sleep(2000);
        WebElement Container = driver
                .findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[3]/ul/li/span"));
        Container.click();

        WebElement Option = dropdownContainer.findElement(
                By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[3]/ul/li/ul/li[3]/span"));
        Option.click();

        Thread.sleep(2000);

        WebElement Contain = driver
                .findElement(By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[4]/ul/li/span"));
        Contain.click();

        WebElement Opt = dropdownContainer.findElement(
                By.xpath("/html/body/main/div[10]/section[1]/div/div[2]/div[1]/div[4]/ul/li/ul/li[4]/span"));
        Opt.click();

        WebElement returns = driver.findElement(By.xpath("/html/body/main/div[10]/section[3]/div/ul/li[2]"));
        returns.click();
        Thread.sleep(5000);

        WebElement printthis = driver.findElement(By.xpath(
                "/html/body/main/div[10]/section[5]/div/div[1]/section[1]/div[2]/div[2]/ul/li[1]/table/tbody/tr[1]"));
        System.out.println(printthis.getText());
    }

    @AfterMethod
    public void afterMethod() throws InterruptedException {
        Thread.sleep(15000);
        driver.quit();
	}

}
-----------------------------------------------------------------------------------
D5-PAH

package com.max;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

// import ch.qos.logback.core.joran.action.Action;
// import utils.*;
// import uistore.*;

public class AppTest {

    public WebDriver driver;
    public final int IMPLICIT_WAIT_TIME = 10;
    public final int PAGE_LOAD_TIME = 10;

    // WebDriverHelper helper = new WebDriverHelper(driver);

    @BeforeMethod
    public void startUp() throws Exception {
        // DesiredCapabilities dc = new DesiredCapabilities();
        // dc.setBrowserName("chrome");
        // driver = new RemoteWebDriver(new URL("http://localhost:4444/"), dc);
        WebDriverManager.chromedriver().setup();
        driver = new ChromeDriver();
        driver.manage().window().maximize();

        // driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(IMPLICIT_WAIT_TIME));
        // driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));

        driver.get("https://magento.softwaretestingboard.com/");
        Thread.sleep(4000);
        // WebDriverListener listener = new EventHandler();
        // driver = new EventFiringDecorator<>(listener).decorate(driver);
    }

    @Test(priority = 0)
    public void test1() throws Exception {
        Thread.sleep(1000);
        driver.findElement(By.id("search")).click();
        Thread.sleep(1000);
        driver.findElement(By.id("search")).sendKeys("Shoes");
        Thread.sleep(1000);
        driver.findElement(By.xpath("//*[@id='search_mini_form']/div[2]/button")).click();
        Thread.sleep(3000);
        driver.findElement(By.id("sorter")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("(//option[@value='price'])[1]")).click();
    }

    @Test(priority = 1)
    public void test2() throws Exception {
        Thread.sleep(2000);
        Actions actions = new Actions(driver);
        actions.moveToElement(driver.findElement(By.xpath("//a[@id='ui-id-5']"))).build().perform();
        Thread.sleep(2000);
        actions.moveToElement(driver.findElement(By.xpath("//a[@id='ui-id-17']"))).build().perform();
        Thread.sleep(2000);
        driver.findElement(By.xpath("//a[@id='ui-id-20']")).click();
    }

    @Test(priority = 2)
    public void test3() throws Exception {
 

        // Click on the pop-up button
        Thread.sleep(2000);
        driver.findElement(By.xpath("//span[contains(text(),'Shop Tees')]")).click();

        Thread.sleep(1000);
        driver.findElement(By.xpath("(//img[@class='product-image-photo'])[3]")).click();

        Thread.sleep(1000);
        driver.findElement(By.id("option-label-size-143-item-168")).click();
        Thread.sleep(1000);
        driver.findElement(By.id("option-label-color-93-item-56")).click();
        Thread.sleep(1000);
        driver.findElement(By.id("product-addtocart-button")).click();
    }

    @AfterMethod
    public void afterMethod() {
        driver.quit();

    }

}
-----------------------------------------------------------------------------------
package Opentable_Test;

(mvn clean test)
3


import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

import java.util.Set;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.support.ui.ExpectedConditions;
import utils.EventHandler;

public class OpenTableTest {
    public static WebDriver driver;
    private WebDriverWait wait;
    public final int IMPLICIT_WAIT_TIME=10;
    public final int PAGE_LOAD_TIME=5;

    @BeforeMethod
    public WebDriver beforeMethod() throws MalformedURLException {
        ChromeOptions chromeOptions = new ChromeOptions();
        driver = new RemoteWebDriver(new URL("http://localhost:4444/"),
        chromeOptions);
        driver.manage().window().maximize();
        driver.get("https://www.opentable.com/");
        driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);
        return driver;


    }

    @Test
    public void opent() throws InterruptedException {
        Thread.sleep(10000);
        int numberOfArrowDownPresses = 3;
        int dropdown = 2;
        int timedropdown = 1;

        WebElement inputbox = driver.findElement(By.xpath("//input[@placeholder='Location, Restaurant, or Cuisine']"));
        inputbox.click();
        inputbox.sendKeys("Bangalore");

        for (int i = 0; i < numberOfArrowDownPresses; i++) {
            inputbox.sendKeys(Keys.ARROW_DOWN);
        }

        inputbox.sendKeys(Keys.ENTER);

        String parentWindowHandle = driver.getWindowHandle();
        Thread.sleep(3000);
        WebElement imageElement = driver
                .findElement(By.xpath("//*[@id='mainContent']/div/div/div[2]/div/div[1]/a/img"));
        imageElement.click();

        System.out.println("CLicked First Hotel");

        Set<String> windowHandles = driver.getWindowHandles();
        for (String windowHandle : windowHandles) {
            if (!windowHandle.equals(parentWindowHandle)) {
                driver.switchTo().window(windowHandle);
                JavascriptExecutor js = (JavascriptExecutor) driver;
                js.executeScript("window.scrollBy(0, 500);");
                break;
            }
        }

        WebElement partySizeDropdown = driver
                .findElement(By.xpath("//select[@id='restProfileSideBarDtpPartySizePicker']"));
        partySizeDropdown.click();

        try {
            for (int i = 0; i < dropdown; i++) {
                partySizeDropdown.sendKeys(Keys.ARROW_DOWN);
            }
            partySizeDropdown.sendKeys(Keys.ENTER);
        } catch (Exception e) {

        }
        System.out.println("CLicked 4 persons");
        try {
            WebElement datePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBarDtpDayPicker-label']"));
            datePicker.click();
            WebElement dateElement = driver.findElement(By.xpath(
                    "//*[@id='restProfileSideBarDtpDayPicker-wrapper']/div/div/div/table/tbody/tr[6]/td[7]/button"));
            dateElement.click();
            System.out.println("CLicked nov 14th date");

        } catch (Exception e) {

        }

        // Time picker
        try {
            WebElement timePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBartimePickerDtpPicker']"));
            timePicker.click();

            try {
                for (int i = 0; i < timedropdown; i++) {
                    timePicker.sendKeys(Keys.ARROW_UP);
                }
                timePicker.sendKeys(Keys.ENTER);
            } catch (Exception e) {

            }

            System.out.println("CLicked 6:30pm");

            WebElement findatime = driver
                    .findElement(By.xpath("//*[@id='mainContent']/div/div[2]/div[2]/div/article/div/div[5]/button"));
            findatime.click();
            System.out.println("CLicked Find a Time btn");
        } catch (Exception e) {

        }
    }

    @AfterMethod
    public void afterMethod() {
        driver.quit();
    }

}

or 

package com.max;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

import java.util.Set;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
// import utils.EventHandler;

public class AppTest {
	public static WebDriver driver;
	@SuppressWarnings("unused")
	private WebDriverWait wait;
	public final int IMPLICIT_WAIT_TIME = 10;
	public final int PAGE_LOAD_TIME = 5;

	@BeforeMethod
	public WebDriver beforeMethod() throws MalformedURLException {
        // Portal
		// ChromeOptions chromeOptions = new ChromeOptions();
		// driver = new RemoteWebDriver(new URL("http://localhost:4444/"), chromeOptions);
		// driver.get("https://www.opentable.com");
		// driver.manage().window().maximize();
		// wait = new WebDriverWait(driver, Duration.ofSeconds(20));
		// driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
		// WebDriverListener listener = new EventHandler();
		// driver = new EventFiringDecorator<>(listener).decorate(driver);
        //Local
        WebDriverManager.chromedriver().setup();
        driver = new ChromeDriver();
        driver.get("https://www.opentable.com");
		driver.manage().window().maximize();
		return driver;

	}

	@Test
	public void Test() throws Exception {
		wait = new WebDriverWait(driver, Duration.ofSeconds(10));
		int numberOfArrowDownPresses = 3;
		int dropdown = 2;
		int timedropdown = 1;

		WebElement inputbox = driver.findElement(By.xpath("//input[@placeholder='Location, Restaurant, or Cuisine']"));
		inputbox.click();
		inputbox.sendKeys("Bangalore");

		for (int i = 0; i < numberOfArrowDownPresses; i++) {
			inputbox.sendKeys(Keys.ARROW_DOWN);
		}

		inputbox.sendKeys(Keys.ENTER);

		String parentWindowHandle = driver.getWindowHandle();
		wait = new WebDriverWait(driver, Duration.ofSeconds(3));
		WebElement imageElement = driver
				.findElement(By.xpath("//*[@id='mainContent']/div/div/div[2]/div/div[1]/a/img"));
		imageElement.click();

		System.out.println("CLicked First Hotel");

		Set<String> windowHandles = driver.getWindowHandles();
		for (String windowHandle : windowHandles) {
			if (!windowHandle.equals(parentWindowHandle)) {
				driver.switchTo().window(windowHandle);
				JavascriptExecutor js = (JavascriptExecutor) driver;
				js.executeScript("window.scrollBy(0, 500);");
				break;
			}
		}

		WebElement partySizeDropdown = driver
				.findElement(By.xpath("//select[@id='restProfileSideBarDtpPartySizePicker']"));
		partySizeDropdown.click();

		try {
			for (int i = 0; i < dropdown; i++) {
				partySizeDropdown.sendKeys(Keys.ARROW_DOWN);
			}
			partySizeDropdown.sendKeys(Keys.ENTER);
		} catch (Exception e) {

		}
		System.out.println("CLicked 4 persons");
		try {
			WebElement datePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBarDtpDayPicker-label']"));
			datePicker.click();
			WebElement dateElement = driver.findElement(By.xpath(
					"//*[@id='restProfileSideBarDtpDayPicker-wrapper']/div/div/div/table/tbody/tr[6]/td[7]/button"));
			dateElement.click();
			System.out.println("CLicked nov 14th date");

		} catch (Exception e) {

		}

		try {
			WebElement timePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBartimePickerDtpPicker']"));
			timePicker.click();

			try {
				for (int i = 0; i < timedropdown; i++) {
					timePicker.sendKeys(Keys.ARROW_UP);
				}
				timePicker.sendKeys(Keys.ENTER);
			} catch (Exception e) {

			}

			System.out.println("CLicked 6:30pm");

			WebElement findatime = driver
					.findElement(By.xpath("//*[@id='mainContent']/div/div[2]/div[2]/div/article/div/div[5]/button"));
			findatime.click();
			System.out.println("CLicked Find a Time btn");
		} catch (Exception e) {

		}
	}

	@AfterMethod
	public void afterMethod() {
		driver.quit();
	}

}

----------------------------------------------------------------------------------------------------------------



2,
package com.example;

import java.net.MalformedURLException;
import java.net.URL;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;

/**
 * Unit test for simple App.
 */
public class AppTest {
    public static WebDriver driver;

    @Test
    public void shouldAnswerWithTrue() throws MalformedURLException, InterruptedException {
        ChromeOptions co = new ChromeOptions();
        // WebDriverManager.chromedriver().setup();
        // WebDriver driver = new ChromeDriver();
        driver = new RemoteWebDriver(new URL("http://localhost:4444/"), co);
        driver.get("https://www.shoppersstop.com");
        Thread.sleep(8000);
        driver.findElement(By.className("user-icon")).click();
        driver.manage().window().maximize();
        // String tit =driver.getTitle();
        // String src =driver.getPageSource();
        driver.navigate().to("https://www.google.com");
        driver.navigate().back();
        driver.close();
    }
}

--------------------------------------------------------------------------------------------------------------------

6,
import java.time.Duration;
import java.util.Set;
import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import io.github.bonigarcia.wdm.WebDriverManager;

public class Opentable1 {
    public static void main(String[] args) {
        final Logger logger = Logger.getLogger(Opentable1.class);
        WebDriverManager.chromedriver().setup();
        WebDriver driver = new ChromeDriver();
        PropertyConfigurator.configure("E:\\Training files\\Iamneo\\seleniumcse\\demo3\\demo3\\src\\main\\resources\\log4j2.properties");
        driver.get("https://www.opentable.com");
        driver.manage().window().maximize();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
        
        WebElement inputbox = driver.findElement(By.xpath("//input[@placeholder='Location, Restaurant, or Cuisine']"));
        inputbox.click();
        inputbox.sendKeys("Bangalore");
        for (int i = 0; i < 3; i++) {
            inputbox.sendKeys(Keys.ARROW_DOWN);
        }
        
        String parentWindowHandle = driver.getWindowHandle();
        
        // TC : 2 clicking Let's Go button
        driver.findElement(By.xpath("//*[@id='mainContent']/header/div/span/div/div/div[2]/div[2]/button")).click();
        driver.findElement(By.xpath("//*[@id='mainContent']/div/div/div[2]/div[1]/div[2]/div[1]/div[1]/a")).click();
        System.out.println("Clicked First Hotel");
        logger.info("Clicked First Hotel");
        
        Set<String> windowHandles = driver.getWindowHandles();
        for (String windowHandle : windowHandles) {
            if (!windowHandle.equals(parentWindowHandle)) {
                driver.switchTo().window(windowHandle);
                JavascriptExecutor js = (JavascriptExecutor) driver;
                js.executeScript("window.scrollBy(0, 500);");
                break;
            }
        }
        
        WebElement partySizeDropdown = driver.findElement(By.xpath("//select[@id='restProfileSideBarDtpPartySizePicker']"));
        partySizeDropdown.click();
        try {
            for (int i = 0; i < 2; i++) {
                partySizeDropdown.sendKeys(Keys.ARROW_DOWN);
            }
            partySizeDropdown.sendKeys(Keys.ENTER);
        } catch (Exception e) {
        }
        System.out.println("Clicked 4 persons");
        logger.info("Clicked 4 persons");
        
        try {
            WebElement timePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBartimePickerDtpPicker']"));
            timePicker.click();
            try {
                for (int i = 0; i < 1; i++) {
                    timePicker.sendKeys(Keys.ARROW_UP);
                }
                timePicker.sendKeys(Keys.ENTER);
            } catch (Exception e) {
            }
            System.out.println("Selected 6:30pm");
            logger.info("Selected 6:30pm");
            
            WebElement findatime = driver.findElement(By.xpath("//*[@id='mainContent']/div/div[2]/div[2]/div/article/div/div[5]/button"));
            findatime.click();
            System.out.println("Clicked Find a Time btn");
        } catch (Exception e) {
        }
        
        String parentWindowHandle2 = driver.getWindowHandle();
        // clicking 6.30 pm time button
        driver.findElement(By.linkText("6:30 PM")).click();
        logger.info("Clicked 6:30pm Time Button");
        Set<String> windowHandles2 = driver.getWindowHandles();
        for (String windowHandle : windowHandles2) {
            if (!windowHandle.equals(parentWindowHandle) && !windowHandle.equals(parentWindowHandle2)) {
                driver.switchTo().window(windowHandle);
                JavascriptExecutor js = (JavascriptExecutor) driver;
                js.executeScript("window.scrollBy(0, 500);");
                break;
            }
        }
        // clicking sign-in button in tab no3
        driver.findElement(By.xpath("//*[@id='mainContent']/div/div/div/section/div[4]/button")).click();
        // 
        driver.findElement(By.xpath("//*[@id=\"mainContent\"]/div/div/div/section/form/div[3]/button")).click();
        System.out.println("Clicked Sign in link");
        logger.info("Clicked Sign in link");
    }
}

Proerty File:
# Root logger 
log4j.rootLogger=INFO, file, stdout 
 
# Direct to a file
log4j.appender.file=org.apache.log4j.RollingFileAppender 
log4j.appender.file.File=D:\\Vijai\\app.log
log4j.appender.file.MaxFileSize=5KB 
log4j.appender.file.MaxBackupIndex=2 
log4j.appender.file.layout=org.apache.log4j.PatternLayout 
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n 
 
# Direct to console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender 
log4j.appender.stdout.Target=System.out 
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout 
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

--------------------------------------------------------------------------------------------------------------------

7,package com.example;

import java.io.File;
import java.io.FileInputStream;
import org.apache.commons.io.FileUtils;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.junit.BeforeClass;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.io.FileHandler;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.Test;
import com.relevantcodes.extentreports.ExtentReports;
import com.relevantcodes.extentreports.ExtentTest;
import io.github.bonigarcia.wdm.WebDriverManager;

public class AppTest {
    WebDriver w;

    @Test(priority = 1)
    public void navigate() throws Exception {
        WebDriverManager.chromedriver().setup();
        ChromeOptions options = new ChromeOptions();
        options.addArguments("--start-maximized"); // Maximize window
        w = new ChromeDriver(options);
        WebDriverWait wait = new WebDriverWait(w, java.time.Duration.ofSeconds(10)); // Explicit wait
        w.navigate().to("https://www.abhibus.com/");
        Thread.sleep(10000);
        w.findElement(By.id("train-link")).click();
        Thread.sleep(10000);
        String url = w.getCurrentUrl();
        if (url.contains("trains")) {
            WebElement homeLink = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id=\"root\"]/div[1]/div/div[1]/a/img")));
            homeLink.click();
            WebElement loginSignup = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("login-link")));
            loginSignup.click();
            WebElement loginPopup = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id=\"login-heading\"]/div[1]/h4")));
            String popupText = loginPopup.getText();
            if (popupText.contains("Login to AbhiBus")) {
                File screenshotFile = ((ChromeDriver) w).getScreenshotAs(org.openqa.selenium.OutputType.FILE);
                FileHandler.copy(screenshotFile, new File("login_popup_screenshot.png"));
                System.out.println("Screenshot captured successfully.");
            } else {
                System.out.println("Login popup verification failed.");
            }
        } else {
            System.out.println("URL does not contain the keyword 'trains'.");
        }
        w.quit();
    }

    @Test(priority = 2)
    public void Search() throws Exception {
        w = new ChromeDriver();
        WebDriverManager.chromedriver().setup();
        File f = new File("C:\\Users\\PRIYA\\Documents\\CC@TEST.xls");
        FileInputStream i = new FileInputStream(f);
        Workbook wb = new HSSFWorkbook(i);
        WebDriverWait wait = new WebDriverWait(w, java.time.Duration.ofSeconds(10)); // Explicit wait
        Sheet s = wb.getSheet("Sheet1");
        Row r = s.getRow(0);
        w.navigate().to("https://www.abhibus.com/");
        Thread.sleep(2000);
        w.findElement(By.id("bus-link")).click();
        Thread.sleep(5000);
        WebElement toInput = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id=\"search-from\"]/div/div/div/div/div[2]/input")));
        toInput.sendKeys(r.getCell(0).getStringCellValue());
        toInput.sendKeys(Keys.ENTER);
        WebElement toIn = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id=\"search-to\"]/div/div/div/div/div[2]/input")));
        toIn.sendKeys(r.getCell(1).getStringCellValue());
        toIn.sendKeys(Keys.ENTER);
        w.findElement(By.xpath("//*[@id=\"search-button\"]/button")).click();
        Thread.sleep(9000);
        if (w.getCurrentUrl().contains("Mumbai")) {
            System.out.println("Verified");
        } else {
            System.out.println("Not verified");
        }
    }

    @Test(priority = 3)
    public void scroll() throws Exception {
        WebDriverManager.chromedriver().setup();
        w = new ChromeDriver();
        w.navigate().to("https://www.abhibus.com/");
        w.manage().window().maximize();
        Thread.sleep(5000);
        JavascriptExecutor j = (JavascriptExecutor) w;
        j.executeScript("window.scrollBy(0,1000)", "");
        w.findElement(By.xpath("//*[@id=\"footer-routes\"]/div/div[1]/div/div/div/div/button[5]")).click();
        Thread.sleep(2000);
        w.findElement(By.xpath("//*[@id=\"footer-routes\"]/div/div[2]/div/div/div/div[7]/a")).click();
        Thread.sleep(2000);
        TakesScreenshot ts = (TakesScreenshot) w;
        File src = ts.getScreenshotAs(OutputType.FILE);
        File des = new File("L:\\SoftwareTesting\\keyworddriven\\src\\test\\ss.png");
        FileUtils.copyFile(src, des);
        String med = w.findElement(By.xpath("/html/body/div[4]/div[1]/div[1]/h2")).getText();
        if (med.equals("Media")) {
            System.out.println("The page contains the word Media");
        } else
            System.out.println("The page doesnot contain the word Media");
    }
}

----------------------------------------------------------


8,package com.example;

import java.io.File;
import java.io.FileInputStream;
import org.apache.commons.io.FileUtils;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.junit.BeforeClass;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.io.FileHandler;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.Test;
import com.relevantcodes.extentreports.ExtentReports;
import com.relevantcodes.extentreports.ExtentTest;
import io.github.bonigarcia.wdm.WebDriverManager;

public class AppTest {
    WebDriver w;

    @Test(priority = 1)
    public void navigate() throws Exception {
        WebDriverManager.chromedriver().setup();
        ChromeOptions options = new ChromeOptions();
        options.addArguments("--start-maximized"); // Maximize window
        w = new ChromeDriver(options);
        WebDriverWait wait = new WebDriverWait(w, java.time.Duration.ofSeconds(10)); // Explicit wait
        w.navigate().to("https://www.abhibus.com/");
        Thread.sleep(10000);
        w.findElement(By.id("train-link")).click();
        Thread.sleep(10000);
        String url = w.getCurrentUrl();
        if (url.contains("trains")) {
            WebElement homeLink = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id=\"root\"]/div[1]/div/div[1]/a/img")));
            homeLink.click();
            WebElement loginSignup = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("login-link")));
            loginSignup.click();
            WebElement loginPopup = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id=\"login-heading\"]/div[1]/h4")));
            String popupText = loginPopup.getText();
            if (popupText.contains("Login to AbhiBus")) {
                File screenshotFile = ((ChromeDriver) w).getScreenshotAs(org.openqa.selenium.OutputType.FILE);
                FileHandler.copy(screenshotFile, new File("login_popup_screenshot.png"));
                System.out.println("Screenshot captured successfully.");
            } else {
                System.out.println("Login popup verification failed.");
            }
        } else {
            System.out.println("URL does not contain the keyword 'trains'.");
        }
        w.quit();
    }

    @Test(priority = 2)
    public void Search() throws Exception {
        w = new ChromeDriver();
        WebDriverManager.chromedriver().setup();
        File f = new File("C:\\Users\\PRIYA\\Documents\\CC@TEST.xls");
        FileInputStream i = new FileInputStream(f);
        Workbook wb = new HSSFWorkbook(i);
        WebDriverWait wait = new WebDriverWait(w, java.time.Duration.ofSeconds(10)); // Explicit wait
        Sheet s = wb.getSheet("Sheet1");
        Row r = s.getRow(0);
        w.navigate().to("https://www.abhibus.com/");
        Thread.sleep(2000);
        w.findElement(By.id("bus-link")).click();
        Thread.sleep(5000);
        WebElement toInput = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id=\"search-from\"]/div/div/div/div/div[2]/input")));
        toInput.sendKeys(r.getCell(0).getStringCellValue());
        toInput.sendKeys(Keys.ENTER);
        WebElement toIn = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id=\"search-to\"]/div/div/div/div/div[2]/input")));
        toIn.sendKeys(r.getCell(1).getStringCellValue());
        toIn.sendKeys(Keys.ENTER);
        w.findElement(By.xpath("//*[@id=\"search-button\"]/button")).click();
        Thread.sleep(9000);
        if (w.getCurrentUrl().contains("Mumbai")) {
            System.out.println("Verified");
        } else {
            System.out.println("Not verified");
        }
    }

    @Test(priority = 3)
    public void scroll() throws Exception {
        WebDriverManager.chromedriver().setup();
        w = new ChromeDriver();
        w.navigate().to("https://www.abhibus.com/");
        w.manage().window().maximize();
        Thread.sleep(5000);
        JavascriptExecutor j = (JavascriptExecutor) w;
        j.executeScript("window.scrollBy(0,1000)", "");
        w.findElement(By.xpath("//*[@id=\"footer-routes\"]/div/div[1]/div/div/div/div/button[5]")).click();
        Thread.sleep(2000);
        w.findElement(By.xpath("//*[@id=\"footer-routes\"]/div/div[2]/div/div/div/div[7]/a")).click();
        Thread.sleep(2000);
        TakesScreenshot ts = (TakesScreenshot) w;
        File src = ts.getScreenshotAs(OutputType.FILE);
        File des = new File("L:\\SoftwareTesting\\keyworddriven\\src\\test\\ss.png");
        FileUtils.copyFile(src, des);
        String med = w.findElement(By.xpath("/html/body/div[4]/div[1]/div[1]/h2")).getText();
        if (med.equals("Media")) {
            System.out.println("The page contains the word Media");
        } else
            System.out.println("The page doesnot contain the word Media");
    }
}

--------------------------------------------------------------------------------------------------------------------
9,package com.example;

import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import org.apache.commons.io.FileUtils;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import com.relevantcodes.extentreports.ExtentReports;
import com.relevantcodes.extentreports.ExtentTest;
import com.relevantcodes.extentreports.LogStatus;
import io.github.bonigarcia.wdm.WebDriverManager;

public class AppTest {
    static ExtentTest test;
    static ExtentReports report;

    @BeforeClass
    public static void startTest() {
        report = new ExtentReports("ExtentReportResults.html");
        test = report.startTest("ExtentDemo");
    }

    @Test
    public void TestCase() throws Exception {
        WebDriverManager.chromedriver().setup();
        WebDriver driver = new ChromeDriver();
        driver.manage().window().maximize();
        driver.get("https://www.mayoclinic.org/");
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"header content-inner-container\"]/div[1]/ul/li[5]/div[1]/div/button/span")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"button-d87139392b\"]/span/span/span[1]/span")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"amounts\"]/label[3]")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"designation\"]")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"designation\"]/option[8]")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"adfWrapper\"]/fieldset[2]/div[1]/label"));
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalTitle\"]")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalTitle\"]/option[2]")).click();
        Thread.sleep(3000);
        File fobj = new File("c:\\Users\\91989\\Documents\\ex_9.xls");
        FileInputStream fi = new FileInputStream(fobj);
        Workbook wb = new HSSFWorkbook(fi);
        Sheet sheet = wb.getSheet("Sheet1");
        int rowcount = sheet.getLastRowNum() - sheet.getFirstRowNum() + 1;
        ArrayList<String> arr = new ArrayList<>();
        for (int row = 0; row < rowcount; row++) {
            Row r = sheet.getRow(row);
            for (int col = 0; col < 5; col++) {
                System.out.println(r.getCell(col).getStringCellValue() + "");
                arr.add(r.getCell(col).getStringCellValue() + "");
            }
        }
        driver.findElement(By.xpath("//*[@id=\"personalFirstName\"]")).sendKeys(arr.get(0));
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalLastName\"]")).sendKeys(arr.get(1));
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalCountry\"]")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalCountry\"]/option[80]")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalState\"]")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalState\"]/option[2]")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalAddress\"]")).sendKeys(arr.get(2));
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalCity\"]")).sendKeys(arr.get(3));
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalZip\"]")).sendKeys("635126");
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalPhone\"]")).sendKeys("1234567890");
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"personalEmail\"]")).sendKeys(arr.get(4));
        Thread.sleep(3000);
        driver.findElement(By.xpath("//*[@id=\"adfSubmit\"]")).click();
        Thread.sleep(10000);
        test.log(LogStatus.PASS, "TestCase passed");
        Thread.sleep(3000);
        File screenshotFile = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
        FileUtils.copyFile(screenshotFile, new File("screenshot.png"));
    }

    @AfterClass
    public static void endTest() {
        report.endTest(test);
        report.flush();
    }
}
--------------------------------------------------------------------------------------------------------------------
10,
package com.pie;

import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.List;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.Test;
import io.github.bonigarcia.wdm.WebDriverManager;

public class AppTest {
    List<String[]> testData;
    WebDriver driver;
    File obj = new File("C:\\Users\\agnkk\\Downloads\\firstcry.xls");
    FileInputStream fis;
    Workbook wb;
    Sheet sh;

    public void checkreport() throws Exception {
        testData = new ArrayList<>();
        WebDriverManager.chromedriver().setup();
        driver = new ChromeDriver();
        driver.get("https://www.firstcry.com/");
        Thread.sleep(12000);
        fis = new FileInputStream(obj);
        wb = new HSSFWorkbook(fis);
        sh = wb.getSheet("Sheet1");
    }

    @Test(priority = 1)
    public void Search() throws Exception {
        checkreport();
        Row r = sh.getRow(0);
        WebElement a = driver.findElement(By.xpath("//*[@id=\"search_box\"]"));
        a.click();
        Thread.sleep(2000);
        a.sendKeys(r.getCell(0) + "");
        Thread.sleep(3000);
        a.sendKeys(Keys.ENTER);
        Thread.sleep(3000);
        String cur = driver.getCurrentUrl();
        if (cur.contains("kids-toys"))
            System.out.println("Validation successful");
        else
            System.out.println("Validation unsuccessful");
        driver.close();
        wb.close();
        fis.close();
    }

    @Test(priority = 2)
    public void clothes() throws Exception {
        checkreport();
        Row r1 = sh.getRow(1);
        WebElement a = driver.findElement(By.xpath("//*[@id=\"search_box\"]"));
        a.click();
        Thread.sleep(2000);
        a.sendKeys(r1.getCell(0) + "");
        Thread.sleep(3000);
        a.sendKeys(Keys.ENTER);
        Thread.sleep(3000);
        driver.findElement(By.xpath("/html/body/div[5]/div[2]/div/div[1]/div[3]/div[2]/div[1]/div[2]/div[2]/ul/li[4]/a/div/span[1]")).click();
        Thread.sleep(3000);
        WebElement lab = driver.findElement(By.xpath("/html/body/div[5]/div[2]/div/div[2]/div[1]/div[1]/h1"));
        if (lab.isDisplayed()) {
            System.out.println(" label element is present");
        } else
            System.out.println(" label element is not found");
        wb.close();
        fis.close();
        driver.close();
    }

    @Test(priority = 3)
    public void balloons() throws Exception {
        checkreport();
        Row r2 = sh.getRow(2);
        WebElement a = driver.findElement(By.xpath("//*[@id=\"search_box\"]"));
        a.click();
        Thread.sleep(2000);
        a.sendKeys(r2.getCell(0) + "");
        Thread.sleep(3000);
        a.sendKeys(Keys.ENTER);
        Thread.sleep(3000);
        String tit = driver.getTitle();
        System.out.println(tit);
        wb.close();
        fis.close();
        driver.close();
    }
}
package Ixigo_Test;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.BeforeMethod;
import utils.EventHandler;

public class Test_ixigo {
	public static WebDriver driver;
	
 @BeforeMethod
    public WebDriver beforeMethod() throws MalformedURLException {
		ChromeOptions chromeOptions = new ChromeOptions();
		driver = new RemoteWebDriver(new URL("http://localhost:4444/"), chromeOptions);
		driver.get("https://www.ixigo.com/");
		driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
		WebDriverListener listener = new EventHandler();
		driver = new EventFiringDecorator<>(listener).decorate(driver);
		return driver;
        
    }

	
	}
	
	
	
	******
	
package economic;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import jdk.internal.org.jline.utils.Log;
import utils.EventHandler;

import java.util.List;
import java.util.Set;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.ExpectedConditions;

@SuppressWarnings("unused")
public class TestEconomic {
    public static WebDriver driver;
    @SuppressWarnings("unused")
    private WebDriverWait wait;
    public final int IMPLICIT_WAIT_TIME = 10;
    public final int PAGE_LOAD_TIME = 10;

    @BeforeMethod
    public void beforeMethod() throws MalformedURLException {
        // ChromeOptions chromeOptions = new ChromeOptions();
        // chromeOptions.addArguments("--headless"); // Run in headless mode
        // driver = new RemoteWebDriver(new URL("http://localhost:4444/wd/hub"), chromeOptions); // Use localhost for Selenium Grid
        // driver.manage().window().maximize();
        // driver.manage().timeouts().implicitlyWait(IMPLICIT_WAIT_TIME, TimeUnit.SECONDS);
        // driver.manage().timeouts().pageLoadTimeout(PAGE_LOAD_TIME, TimeUnit.SECONDS);
        // wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        // driver.get("https://economictimes.indiatimes.com/et-now/results");
        // System.out.println("Browser opened and navigated to the Economic Times website");

        // Portal
        ChromeOptions chromeOptions = new ChromeOptions();
        driver = new RemoteWebDriver(new URL("http://localhost:4444"),
        chromeOptions);
        driver.manage().window().maximize();
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        driver.get("https://economictimes.indiatimes.com/et-now/results");
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);
        System.out.println("Browser");

    }

    @Test
    public void economic() throws InterruptedException {
       driver.findElement(By.xpath("//*[@id=\"topnav\"]/div[10]/a")).click();
        Thread.sleep(10000);
        JavascriptExecutor JS = (JavascriptExecutor) driver;
        JS.executeScript("window.scrollBy(0,1000)", "");
        driver.findElement(By.id("amcSelection")).click();
        Thread.sleep(5000);
        Select S = new Select(driver.findElement(By.id("amcSelection")));
        S.selectByVisibleText("Canara Robeco");
        Thread.sleep(5000);
        driver.findElement(By.id("schemenm")).click();
        Thread.sleep(5000);
        Select Se = new Select(driver.findElement(By.id("schemenm")));
        Se.selectByVisibleText("Canara Robeco Bluechip Equity Direct-G");
        Thread.sleep(5000);
        driver.findElement(By.id("anchor3")).click();
        Thread.sleep(15000);

        String currentTab = driver.getWindowHandle();
        for (String tab : driver.getWindowHandles()) {
            if (!tab.equals(currentTab)) {
                driver.switchTo().window(tab);
                break;
            }
        }

        WebEl

******
package Opentable_Test;



import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import java.util.Set;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import utils.EventHandler;


public class OpenTableTest {
	public static WebDriver driver;
    @SuppressWarnings("unused")
	private WebDriverWait wait;
	public final int IMPLICIT_WAIT_TIME=10;
	public final int PAGE_LOAD_TIME=5;
    

 @BeforeMethod
    public WebDriver beforeMethod() throws MalformedURLException {
		ChromeOptions chromeOptions = new ChromeOptions();
		driver = new RemoteWebDriver(new URL("http://localhost:4444/"), chromeOptions);
		driver.get("https://www.opentable.com");
        driver.manage().window().maximize();
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
		//driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
		WebDriverListener listener = new EventHandler();
		driver = new EventFiringDecorator<>(listener).decorate(driver);
		return driver;
        
    }
	@Test
    public void opent() throws InterruptedException {
        Thread.sleep(10000);
        int numberOfArrowDownPresses = 3;
        int dropdown = 2;
        int timedropdown = 1;

        WebElement inputbox = driver.findElement(By.xpath("//input[@placeholder='Location, Restaurant, or Cuisine']"));
        inputbox.click();
        inputbox.sendKeys("Bangalore");

        for (int i = 0; i < numberOfArrowDownPresses; i++) {
            inputbox.sendKeys(Keys.ARROW_DOWN);
        }

        inputbox.sendKeys(Keys.ENTER);

        String parentWindowHandle = driver.getWindowHandle();
        Thread.sleep(3000);
        WebElement imageElement = driver
                .findElement(By.xpath("//*[@id='mainContent']/div/div/div[2]/div/div[1]/a/img"));
        imageElement.click();

        System.out.println("CLicked First Hotel");

        Set<String> windowHandles = driver.getWindowHandles();
        for (String windowHandle : windowHandles) {
            if (!windowHandle.equals(parentWindowHandle)) {
                driver.switchTo().window(windowHandle);
                JavascriptExecutor js = (JavascriptExecutor) driver;
                js.executeScript("window.scrollBy(0, 500);");
                break;
            }
        }

        WebElement partySizeDropdown = driver
                .findElement(By.xpath("//select[@id='restProfileSideBarDtpPartySizePicker']"));
        partySizeDropdown.click();

        try {
            for (int i = 0; i < dropdown; i++) {
                partySizeDropdown.sendKeys(Keys.ARROW_DOWN);
            }
            partySizeDropdown.sendKeys(Keys.ENTER);
        } catch (Exception e) {

        }
        System.out.println("CLicked 4 persons");
        try {
            WebElement datePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBarDtpDayPicker-label']"));
            datePicker.click();
            WebElement dateElement = driver.findElement(By.xpath(
                    "//*[@id='restProfileSideBarDtpDayPicker-wrapper']/div/div/div/table/tbody/tr[6]/td[7]/button"));
            dateElement.click();
            System.out.println("CLicked nov 14th date");

        } catch (Exception e) {

        }

        // Time picker
        try {
            WebElement timePicker = driver.findElement(By.xpath("//*[@id='restProfileSideBartimePickerDtpPicker']"));
            timePicker.click();

            try {
                for (int i = 0; i < timedropdown; i++) {
                    timePicker.sendKeys(Keys.ARROW_UP);
                }
                timePicker.sendKeys(Keys.ENTER);
            } catch (Exception e) {

            }

            System.out.println("CLicked 6:30pm");

            WebElement findatime = driver
                    .findElement(By.xpath("//*[@id='mainContent']/div/div[2]/div[2]/div/article/div/div[5]/button"));
            findatime.click();
            System.out.println("CLicked Find a Time btn");
        } catch (Exception e) {

        }
    }

    @AfterMethod
    public void afterMethod() {
        driver.quit();
    }

}

****


package Groww_Test;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import java.util.List;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import utils.EventHandler;
@SuppressWarnings("unused")
public class Test_groww {
	private static final long PAGE_LOAD_TIME = 10;
    public static WebDriver driver;
 @BeforeMethod
    public WebDriver beforeMethod() throws MalformedURLException {
		ChromeOptions chromeOptions = new ChromeOptions();
        driver = new RemoteWebDriver(new URL("http://localhost:4444/"),
        chromeOptions);
        driver.manage().window().maximize();
        driver.get("https://groww.in/");
        driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);
        return driver;
    }
	@Test
    public void test() throws InterruptedException {
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(PAGE_LOAD_TIME));
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(15));
        JavascriptExecutor js = (JavascriptExecutor) driver;
        driver.get("https://groww.in/");
        WebElement Ql = wait.until(ExpectedConditions
                .visibilityOfElementLocated(By.xpath("//*[@id=\"footer\"]/div/div[1]/div/div[1]/div[2]/div[3]/div")));
        js.executeScript("arguments[0].scrollIntoView(true);", Ql);
        Ql.click();
        wait.until(ExpectedConditions.elementToBeClickable(By.linkText("Calculators"))).click();
        WebElement HEMI = wait.until(
                ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id=\"root\"]/div[2]/div/a[15]/div")));
        js.executeScript("arguments[0].scrollIntoView(true);", HEMI);
        HEMI.click();
        WebElement LoanAmount = wait.until(ExpectedConditions.elementToBeClickable(By.id("LOAN_AMOUNT")));
        LoanAmount.clear();
        LoanAmount.sendKeys("2300000");
        WebElement LoanInterest = wait.until(ExpectedConditions.elementToBeClickable(By.id("RATE_OF_INTEREST")));
        js.executeScript("arguments[0].scrollIntoView(true);", LoanInterest);
        LoanInterest.clear();
        LoanInterest.sendKeys("8");
        WebElement LoanYear = wait.until(ExpectedConditions.elementToBeClickable(By.id("LOAN_TENURE")));
        LoanYear.clear();
        LoanYear.sendKeys("20");
        Thread.sleep(1000);
        WebElement ResultTable = driver.findElement(By.className("tb10Table"));
        List<WebElement> Result = ResultTable.findElements(By.xpath("./tr/td[2]/span"));
        System.out.println("Monthly EMI: " + Result.get(0).getText());
        System.out.println("Principal Amount: " + Result.get(1).getText());
        System.out.println("Total Interest: " + Result.get(2).getText());
        System.out.println("Total Amount: " + Result.get(3).getText());
        driver.quit();
    }
}
******
package PuriesHotel_Test;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import utils.*;
public class Test_purihotel {
    public WebDriver driver;
    public final int IMPLICIT_WAIT_TIME = 10;
    public final int PAGE_LOAD_TIME = 5;
    ExtentSparkReporter sparkReporter;
    ExtentReports extent;
    ExtentTest test;
    @BeforeMethod
    public void startUp() throws MalformedURLException {
        DesiredCapabilities dc = new DesiredCapabilities();
        dc.setBrowserName("chrome");
        driver = new RemoteWebDriver(new URL("http://localhost:4444/"), dc);
        driver.manage().window().maximize();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(IMPLICIT_WAIT_TIME));
        driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(PAGE_LOAD_TIME));
        driver.get("https://www.puriholidayresort.com/");
        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);
        sparkReporter = new ExtentSparkReporter("./reports/PuriHoli.html");
        extent = new ExtentReports();
        extent.attachReporter(sparkReporter);
        test = extent.createTest("HolyResort");
        driver.manage().window().maximize();
    }
    @Test(priority = 0)
    public void test1() throws Exception {
        Thread.sleep(3000);
        driver.findElement(By.xpath("//button[@type='button']")).click();

        driver.findElement(By.xpath("//input[@id='arr_datepicker']")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//a[@class='ui-state-default' and contains(text(),'30')]")).click();

        Thread.sleep(3000);
        driver.findElement(By.xpath("//button[@class='custom-btn']")).click();
    }
    @Test(priority = 1)
    public void test2() throws Exception {
        Thread.sleep(3000);
        driver.findElement(By.xpath("//button[@type='button']")).click();

        Thread.sleep(3000);
        Actions actions = new Actions(driver);
        actions.moveToElement(driver.findElement(By.xpath("//li[2]/a[contains(text(),'Rooms & Suites')]"))).build()
                .perform();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//a[contains(text(),'Royal Suite')]")).click();

        Thread.sleep(3000);
        driver.findElement(By.xpath("//h3[contains(text(),'AMENITIES')]")).click();
    }
    @Test(priority = 2)
    public void test3() throws Exception {
        Thread.sleep(3000);
        By continLocator = By.xpath(
                "//textarea[contains(text(),'Title your review - Describe your stay in one sentence or less. ')]");
        Thread.sleep(3000);
        driver.findElement(By.xpath("//button[@type='button']")).click();
        Thread.sleep(3000);
        Actions actions = new Actions(driver);
        actions.moveToElement(driver.findElement(By.xpath("//li[1]/a[contains(text(),'About Puri')]"))).build()
                .perform();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//a[contains(text(),'Chilika Lake')]")).click();
        Thread.sleep(4000);
        driver.findElement(continLocator).click();
        driver.findElement(continLocator).sendKeys("Excellent");
        Thread.sleep(3000);
        driver.findElement(By.xpath("//input[@value='Continue']")).click();
        String originalWindow = driver.getWindowHandle();
        for (String windowHandle : driver.getWindowHandles()) {
            if (!originalWindow.contentEquals(windowHandle)) {
                driver.switchTo().window(windowHandle);
                break;
            }
        }
        Thread.sleep(3000);
        driver.findElement(By.xpath("//span[contains(text(),'Family')]")).click();
    }
    @AfterMethod
    public void afterMethod() {
        driver.quit();
    }
    @AfterTest
    public void setupreport() {
        extent.flush();
    }
}

******
package com.example;
import static org.junit.Assert.assertTrue;
import java.net.MalformedURLException;
import java.net.URL;
import org.junit.Test;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
public class AppTest 
{
    public static WebDriver driver;
    @Test
    public void shouldAnswerWithTrue() throws MalformedURLException, InterruptedException
    {
        ChromeOptions co = new ChromeOptions();
        driver= new RemoteWebDriver(new URL("http://localhost:4444/"),co);
        driver.get("https://shoppersstop.com");
    }
}
